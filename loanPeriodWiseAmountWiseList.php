<?php
ob_start();
include "main.php";
require_once('dbconnect.php');

// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
// error_reporting(E_ALL);
use simitsdk\phpjasperxml\PHPJasperXML;

$filename = __DIR__.'/loanPeriodWiseAmount.jrxml';

$data = [];
$i=0;
$faker = Faker\Factory::create('en_US');
$AC_TYPE=$_GET['schemeid']; 
$bankName  = $_GET['bankName'];
$BranchName = $_GET['branchName'];
// $schemeCode=$_GET['schemeCode'];
$BRANCH_CODE=$_GET['branch'];
$date=$_GET['date'];
$TRAN_STATUS="'1'";
$DUEBAL="'DUEBAL'";
$LN="'LN'";
$CC="'CC'";
$DS="'DS'";
$P="'P'";
$Space="' '";
$dd="'DD/MM/YYYY'";
$bankName = str_replace("'", "", $bankName);
$BranchName = str_replace("'", "", $BranchName);
$date1 = str_replace("'", "", $date);
$D="'D'";
$AMOUNT="'AMOUNT'";
$PERIOD="'PERIOD'";


$query='SELECT SIZEWISEBALANCE."AMOUNT_FROM" , SIZEWISEBALANCE."AMOUNT_TO" 
, PERIOD."FROM_MONTHS"  "PERIOD_FROM", PERIOD."TO_MONTHS" "PERIOD_TO" 
 , SUM("OVERDUE_ACCOUNTS") "OVERDUE_ACCOUNTS" 
    , SUM("OVERDUE_AMOUNT") "OVERDUE_AMOUNT", SUM("SANCTION_AMOUNT") "SANCTION_AMOUNT"
    From
    
( SELECT LNMASTER."AC_ACNOTYPE" , LNMASTER."AC_TYPE" , LNMASTER."AC_NO" , LNMASTER."AC_NAME" 
    , CASE  COALESCE(VWTMPZODAMTPERIOD."DUEBALANCE",0)  WHEN 0 THEN 0 ELSE 1 END "OVERDUE_ACCOUNTS" 
    , COALESCE(VWTMPZODAMTPERIOD."DUEBALANCE",0) AS "OVERDUE_AMOUNT"  
   , extract(year from age(TO_DATE('.$date.','.$dd.'), CASE CAST(VWTMPZODAMTPERIOD."OVERDUEDATE" AS DATE) WHEN Null THEN TO_DATE('.$date.','.$dd.') ELSE CAST(VWTMPZODAMTPERIOD."OVERDUEDATE" AS DATE) END)) * 12 
  + extract(month from age(TO_DATE('.$date.','.$dd.'), CASE CAST(VWTMPZODAMTPERIOD."OVERDUEDATE" AS DATE) WHEN Null THEN TO_DATE('.$date.','.$dd.') ELSE CAST(VWTMPZODAMTPERIOD."OVERDUEDATE" AS DATE) END))
 "OVERDUE_MONTHS" ,		
     (CASE COALESCE(LNMASTER."AC_SANCTION_AMOUNT",0) WHEN 0 THEN 0 ELSE LNMASTER."AC_SANCTION_AMOUNT" END) AS "SANCTION_AMOUNT" 
    FROM LNMASTER ,
 (
 SELECT SCHEMAST."S_APPL",SCHEMAST."S_APPL" || '.$Space.' || SCHEMAST."S_NAME" "SCHEME", LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", LNMASTER."AC_NAME",  LNMASTER."BANKACNO", LNMASTER."AC_OPDATE", LNMASTER."idmasterID",
LNMASTER."AC_CLOSEDT",  DIRECTORMASTER.ID ||'.$Space.' || DIRECTORMASTER."NAME" "DIRECTORMASTER", "AC_RECOMMEND_BY" "DIRECTOR",
AUTHORITYMASTER.ID || '.$Space.' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER", "AC_AUTHORITY" "AUTHORITY",
RECOVERYCLEARKMASTER.ID || '.$Space.' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER", "AC_RECOVERY_CLERK",
OWNBRANCHMASTER.ID || '.$Space.' || OWNBRANCHMASTER."NAME" "BRANCH",LNMASTER."BRANCH_CODE",
CUSTOMERADDRESS."AC_CTCODE" "CITY", CITYMASTER."CITY_NAME" "CITYNAME", CUSTOMERADDRESS."AC_ADDR" || '.$Space.' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",
LNMASTER."AC_MORATORIUM_PERIOD",LNMASTER."AC_SANCTION_AMOUNT", LNMASTER."AC_GRACE_PERIOD", LNMASTER."AC_REPAYMODE", IDMASTER."AC_MOBILENO",
       (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL" AS FLOAT)  ELSE 
                  (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT) END,0) +
         COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0) )
         "CLOSING_BALANCE"
       ,(COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE
                  (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) + 
         COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0)
       + COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) ELSE 
                  (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
         COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),0) ) "RECPAY_INT_AMOUNT",
LNMASTER."AC_INSTALLMENT",OIRINTBALANCE(SCHEMAST."S_APPL",LNMASTER."BANKACNO",'.$date.',0) "OVERDUEINTEREST",
(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT)/CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "TOTALINSTALLMENTS",
(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then ceil(DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$DUEBAL.',0)/
     CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "DUEINSTALLMENT",
     (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then ceil((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT)-
     DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$DUEBAL.',0)
     )/CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "PAIDINSTALLMENTS",
DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$DUEBAL.',0) "DUEBALANCE",
"AC_EXPIRE_DATE", 
overduedate(CAST(SCHEMAST."S_APPL" AS INTEGER),LNMASTER."BANKACNO", CAST('.$date.' AS CHARACTER VARYING) ,
CAST(DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$DUEBAL.',0) AS CHARACTER VARYING), 
CAST(LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING)) "OVERDUEDATE"
       FROM LNMASTER LEFT JOIN SCHEMAST ON SCHEMAST.ID= LNMASTER."AC_TYPE"
       LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID=CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
       LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID=CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
       LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID=LNMASTER."AC_AUTHORITY" 
       LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID=LNMASTER."BRANCH_CODE"
       LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID"=LNMASTER."idmasterID" 
       AND CUSTOMERADDRESS."AC_ADDTYPE" ='.$P.'
       LEFT JOIN CITYMASTER ON CITYMASTER.ID= CUSTOMERADDRESS."AC_CTCODE"
       LEFT JOIN IDMASTER ON IDMASTER.ID=LNMASTER."idmasterID",
             ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , 
COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT" FROM
(SELECT * FROM (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", 
              COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "TRAN_AMOUNT" 
             , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "RECPAY_INT_AMOUNT"
             , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT) END),0) "OTHER10_AMOUNT", 
               0 "DAILY_AMOUNT",0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
               FROM LOANTRAN 
       WHERE cast("TRAN_DATE" as date) <= TO_DATE('.$date.', '.$dd.') AND   "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
       GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"		
       UNION ALL		
       SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "DAILY_AMOUNT" 
       , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "DAILY_RECPAY_INT_AMOUNT"  
       , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST ("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)  END),0) "DAILY_OTHER10_AMOUNT"  ,
       0 "TRAN_AMOUNT", 0  "RECPAY_INT_AMOUNT", 0 "OTHER10_AMOUNT"  FROM DAILYTRAN WHERE cast("TRAN_DATE" as date) <= TO_DATE('.$date.', '.$dd.')
       AND "TRAN_STATUS" = '.$TRAN_STATUS.'  AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
       GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") RS
       ORDER BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO")AMOUNT
           GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"
) TRANTABLE
       Where LNMASTER."AC_ACNOTYPE"  = TRANTABLE."TRAN_ACNOTYPE"
        AND LNMASTER."AC_TYPE"  = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
        AND LNMASTER."BANKACNO"=  TRANTABLE."TRAN_ACNO"
        
        AND LNMASTER."status"=1 AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
        ORDER BY SCHEMAST."S_APPL", LNMASTER."BANKACNO" 
 ) VWTMPZODAMTPERIOD
    WHERE LNMASTER."AC_TYPE" IN ('.$AC_TYPE.')
    
    AND (CAST(LNMASTER."AC_OPDATE" AS DATE) IS NULL OR CAST(LNMASTER."AC_OPDATE" AS DATE) <= To_DATE('.$date.','.$dd.'))
    AND (CAST(LNMASTER."AC_CLOSEDT" AS DATE) IS NULL OR CAST(LNMASTER."AC_CLOSEDT" AS DATE) > TO_DATE('.$date.','.$dd.'))       
    AND  COALESCE(VWTMPZODAMTPERIOD."DUEBALANCE",0) > 0 ) TMP , SIZEWISEBALANCE , SIZEWISEBALANCE PERIOD 
    WHERE SIZEWISEBALANCE."ACNOTYPE" = '.$LN.' AND SIZEWISEBALANCE."SLAB_TYPE" = '.$AMOUNT.' 
    AND PERIOD."ACNOTYPE" = '.$LN.' AND PERIOD."SLAB_TYPE" = '.$PERIOD.' 
    AND "OVERDUE_AMOUNT" >  SIZEWISEBALANCE."AMOUNT_FROM" 
    AND "OVERDUE_AMOUNT" <= SIZEWISEBALANCE."AMOUNT_TO" 
    AND "OVERDUE_MONTHS" >  PERIOD."FROM_MONTHS" 
    AND "OVERDUE_MONTHS" <= PERIOD."TO_MONTHS" 
GROUP BY SIZEWISEBALANCE."AMOUNT_FROM" , SIZEWISEBALANCE."AMOUNT_TO" 
, PERIOD."FROM_MONTHS" , PERIOD."TO_MONTHS"

';
// echo $query;
$sql =  pg_query($conn,$query);


$TOTAL = 0;
$TOTAL1 =0;
$TOTAL2=0;

while($row = pg_fetch_assoc($sql))
{
        // Sanction Amount
       
 // Data transformation
        // $GRAND_TOTAL += $row['noofac'];
        // $GRAND_TOTAL1 +=  $row['CLOSING_BALANCE'];
        // $GRAND_TOTAL2 += $row['DUEBALANCE'];



        $TOTAL +=$row['OVERDUE_ACCOUNTS'];
        $TOTAL1 +=$row['SANCTION_AMOUNT'];
        $TOTAL2 +=$row['OVERDUE_AMOUNT'];
        $temp =
        [
            // 'S_APPL'=>$row['S_APPL'],
            // 'S_NAME'=>$row['S_NAME'],
            // 'AC_ACNOTYPE'=>$row['AC_ACNOTYPE'],
            // 'AC_TYPE'=>$row['AC_TYPE'],
            // 'AC_NO'=>$row['AC_NO'],
            // 'AC_NAME'=>$row['AC_NAME'],
            // 'BANKACNO'=>$row['BANKACNO'],
            // 'AC_OPDATE'=>$row['AC_OPDATE'],
            // 'BRANCH_CODE'=>$row['BRANCH_CODE'],
            // 'CITY_NAME'=>$row['CITY_NAME'],
            // 'acsacamt'=>$row['AC_SANCTION_AMOUNT'],
            // 'acmoraper'=>$row['AC_MORATORIUM_PERIOD'],
            // 'acmobno'=>$row['AC_MOBILENO'],
            // 'closebal'=>$row['CLOSING_BALANCE'],
            // 'acinst'=>$row['AC_INSTALLMENT'],
            // 'totinst'=>$row['TOTALINSTALLMENTS'],
            // 'duebal'=>$row['DUEBALANCE'],
            // 'totinst'=>$row['TOTALINSTALLMENTS'],
    
            "bankName"  => $bankName,
            "BranchName"=>$BranchName,
            "BRANCHCODE"=>$BRANCH_CODE,
            "AMOUNT_FROM"=>$row['AMOUNT_FROM'],
            "AMOUNT_TO"=>$row['AMOUNT_TO'],
            "PERIOD_FROM"=>$row['PERIOD_FROM'],
            "PERIOD_TO"=>$row['PERIOD_TO'],
            "OVERDUE_ACCOUNTS"=>$row['OVERDUE_ACCOUNTS'],
            "SANCTION_AMOUNT"=>$row['SANCTION_AMOUNT'],
            "OVERDUE_AMOUNT"=>sprintf("%.2f",$row['OVERDUE_AMOUNT'] + 0.0 ) ,

            "TOTAL"=>$TOTAL ,
            "TOTAL1"=>sprintf("%.2f",($TOTAL1) + 0.0 ) ,
            "TOTAL2"=>sprintf("%.2f",($TOTAL2) + 0.0 ) ,

            // "flag"=>$flag,
            "date"=>$date1,
            "scheme"=>$row['S_NAME'],
            
    
        ];
        $data[$i]=$temp;
        $i++;
}
ob_end_clean();
 $config = ['driver'=>'array','data'=>$data];
//print_r($data);
 $report = new PHPJasperXML();
  $report->load_xml_file($filename)    
      ->setDataSource($config)
     ->export('Pdf');
?>