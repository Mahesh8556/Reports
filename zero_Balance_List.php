<?php

ob_start();
include "main.php";
require_once('dbconnect.php'); 

// ini_set('display_errors', '.$transtatus.');
// ini_set('display_startup_errors', '.$transtatus.');
// error_reporting(E_ALL);

use simitsdk\phpjasperxml\PHPJasperXML;

$filename = __DIR__.'/zero_Balance_List.jrxml';

$data = [];
$row = [];
$faker = Faker\Factory::create('en_US');

// $conn = pg_connect("host=127.0.0.'.$transtatus.'dbname=CBSBhairavnath user=postgres password=admin");

$dateformate = "'DD/MM/YYYY'";
$bankname  = $_GET['bankname'];
$Branch  = $_GET['Branch'];
$date = $_GET['date'];
$BRANCH_CODE  = $_GET['BRANCH_CODE'];
$trandr ="'D'";
$transtatus = "'1'";
$qoutes="'..'";
$TD ="'TD'";
$SB ="'SB'";
$CA ="'CA'";
$AG ="'AG'";
$LK ="'LK'";
$PG ="'PG'";
$CC ="'CC'";
$DS ="'DS'";
$LN ="'LN'";


//string replacements
$bankname1 = str_replace("'", "", $bankname);
$date1 = str_replace("'", "", $date);
$Branch1 = str_replace("'", "", $Branch);
$BRANCH_CODE1 = str_replace("'", "", $BRANCH_CODE);



$query='SELECT SCHEMAST."S_APPL", SCHEMAST."S_NAME", ALIAS84.* FROM (SELECT MASTER."AC_ACNOTYPE", MASTER."AC_TYPE", MASTER.
"AC_NO", MASTER."BANKACNO", MASTER."AC_MEMBTYPE" MEMBERTYPE, MASTER."AC_MEMBNO" MEMBERNO, CAST(MASTER."AC_INTRATE" AS double precision) INTRATE, '.$qoutes.' REF_ACNO, MASTER."AC_NAME", MASTER."AC_OPDATE", '.$qoutes.' AC_PARTICULAR, '.$qoutes.' 
AC_TDRECEIPTNO, NULL AC_EXPDT, (COALESCE(CASE WHEN MASTER."AC_OP_CD" = '.$trandr.' THEN CAST(MASTER."AC_OP_BAL" AS float) 
ELSE (-1) * CAST(MASTER."AC_OP_BAL" AS float) END, 0) + COALESCE(TRAN_TABLE.TRAN_AMOUNT, 0) + COALESCE(DAILY_TABLE.
DAILY_AMOUNT, 0)) CLOSING_BALANCE FROM DPMASTER MASTER LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", 
SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) 
END, 0)) TRAN_AMOUNT FROM DEPOTRAN WHERE CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", 
"TRAN_ACTYPE", "TRAN_ACNO") TRAN_TABLE ON (MASTER."AC_ACNOTYPE" = TRAN_TABLE."TRAN_ACNOTYPE" AND MASTER."AC_TYPE" = CAST
(TRAN_TABLE."TRAN_ACTYPE" AS integer) AND CAST(MASTER."BANKACNO" AS CHARACTER varying) = TRAN_TABLE."TRAN_ACNO") AND MASTER.
"status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' LEFT OUTER JOIN 
(SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT"
 AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) INT_TRAN_AMOUNT FROM INTERESTTRAN WHERE COALESCE(CAST
 ("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND "TRAN_STATUS" = '.$transtatus.' AND CAST("TRAN_DATE" AS date) <= 
 CAST('.$date.' AS date) AND "BRANCH_CODE" = '.$transtatus.' GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") INT_TABLE
  ON (MASTER."AC_ACNOTYPE" = INT_TABLE."TRAN_ACNOTYPE" AND MASTER."AC_TYPE" = CAST(INT_TABLE."TRAN_ACTYPE" AS float) AND CAST
  (MASTER."BANKACNO" AS CHARACTER varying) = INT_TABLE."TRAN_ACNO") AND MASTER."status" = '.$transtatus.' AND MASTER.
  "SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", 
  "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) *
   CAST("TRAN_AMOUNT" AS float) END, 0)) DAILY_AMOUNT FROM DAILYTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE" = '.$transtatus.' AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") DAILY_TABLE ON (MASTER."AC_ACNOTYPE" = DAILY_TABLE."TRAN_ACNOTYPE" AND MASTER."AC_TYPE" = CAST(DAILY_TABLE."TRAN_ACTYPE" AS float) AND MASTER."BANKACNO" = DAILY_TABLE."TRAN_ACNO") AND MASTER."status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' WHERE (MASTER."AC_OPDATE" IS NULL OR CAST(MASTER."AC_OPDATE" AS date) <= CAST('.$date.' AS date)) AND (MASTER."AC_CLOSEDT" IS NULL OR CAST(MASTER."AC_CLOSEDT" AS date) > CAST('.$date.' AS date)) AND MASTER."AC_ACNOTYPE" IN ('.$TD.', '.$SB.', '.$CA.', '.$AG.', '.$LK.','.$PG.', '.$CC.','.$DS.','.$LN.') UNION ALL SELECT MASTER."AC_ACNOTYPE", MASTER."AC_TYPE", MASTER."AC_NO", MASTER."BANKACNO", MASTER."AC_MEMBTYPE" MEMBERTYPE, MASTER."AC_MEMBNO" MEMBERNO, GETLNINTRATE(CAST(MASTER."AC_TYPE" AS CHARACTER VARYING), CAST(MASTER."AC_NO" AS CHARACTER VARYING), CAST('.$date.' AS CHARACTER VARYING)) INTRATE, '.$qoutes.' REF_ACNO, MASTER."AC_NAME", MASTER."AC_OPDATE", '.$qoutes.'AC_PARTICULAR, '.$qoutes.' AC_TDRECEIPTNO, NULL AC_EXPDT, (COALESCE(CASE WHEN MASTER."AC_OP_CD" = '.$trandr.' THEN CAST(MASTER."AC_OP_BAL" AS FLOAT) ELSE (-1) * CAST(MASTER."AC_OP_BAL" AS FLOAT) END, 0) + COALESCE(TRAN_TABLE.TRAN_AMOUNT, 0) + COALESCE(DAILY_TABLE.DAILY_AMOUNT, 0)) CLOSING_BALANCE FROM PGMASTER MASTER LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) TRAN_AMOUNT FROM PIGMYTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) AND "BRANCH_CODE" = '.$transtatus.' GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") TRAN_TABLE ON (MASTER."AC_ACNOTYPE" = TRAN_TABLE."TRAN_ACNOTYPE" AND MASTER."AC_TYPE" = CAST(TRAN_TABLE."TRAN_ACTYPE" AS integer) AND MASTER."BANKACNO" = TRAN_TABLE."TRAN_ACNO") AND MASTER."status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) INT_TRAN_AMOUNT FROM INTERESTTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE" = '.$transtatus.' AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") INT_TABLE ON (MASTER."AC_ACNOTYPE" = INT_TABLE."TRAN_ACNOTYPE" AND MASTER."AC_TYPE" = CAST(INT_TABLE."TRAN_ACTYPE" AS integer) AND MASTER."BANKACNO" = INT_TABLE."TRAN_ACNO") AND MASTER."status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) DAILY_AMOUNT FROM DAILYTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE" = '.$transtatus.' AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") DAILY_TABLE ON (MASTER."AC_ACNOTYPE" = DAILY_TABLE."TRAN_ACNOTYPE" AND MASTER."AC_TYPE" = CAST(DAILY_TABLE."TRAN_ACTYPE" AS integer) AND MASTER."BANKACNO" = DAILY_TABLE."TRAN_ACNO") AND MASTER."status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' WHERE (MASTER."AC_OPDATE" IS NULL OR CAST(MASTER."AC_OPDATE" AS date) <= CAST('.$date.' AS date)) AND (MASTER."AC_CLOSEDT" IS NULL OR CAST(MASTER."AC_CLOSEDT" AS date) > CAST('.$date.' AS date)) AND MASTER."AC_ACNOTYPE" IN ('.$TD.', '.$SB.', '.$CA.', '.$AG.', '.$LK.','.$PG.', '.$CC.','.$DS.','.$LN.') UNION ALL SELECT MASTER."AC_ACNOTYPE", MASTER."AC_TYPE", MASTER."AC_NO", MASTER."BANKACNO", MASTER."AC_MEMBTYPE" MEMBERTYPE, MASTER."AC_MEMBNO" MEMBERNO, CAST(MASTER."AC_INTRATE" AS double precision)INTRATE, '.$qoutes.' REF_ACNO, MASTER."AC_NAME", MASTER."AC_OPDATE", '.$qoutes.' AC_PARTICULAR, '.$qoutes.' AC_TDRECEIPTNO, NULL AC_EXPDT, (COALESCE(CASE WHEN MASTER."AC_OP_CD" = '.$trandr.' THEN CAST(MASTER."AC_OP_BAL" AS float) ELSE (-1) * CAST(MASTER."AC_OP_BAL" AS float) END, 0) + COALESCE(TRAN_TABLE.TRAN_AMOUNT, 0) + COALESCE(DAILY_TABLE.DAILY_AMOUNT, 0)) CLOSING_BALANCE FROM LNMASTER MASTER LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) TRAN_AMOUNT FROM LOANTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") TRAN_TABLE ON (MASTER."AC_ACNOTYPE" = TRAN_TABLE."TRAN_ACNOTYPE" AND CAST(MASTER."AC_TYPE" AS CHARACTER varying) = TRAN_TABLE."TRAN_ACTYPE" AND MASTER."BANKACNO" = TRAN_TABLE."TRAN_ACNO") LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) INT_TRAN_AMOUNT FROM INTERESTTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE" = '.$transtatus.' AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") INT_TABLE ON (MASTER."AC_ACNOTYPE" = INT_TABLE."TRAN_ACNOTYPE" AND CAST(MASTER."AC_TYPE" AS CHARACTER varying) = INT_TABLE."TRAN_ACTYPE" AND CAST(MASTER."BANKACNO" AS CHARACTER varying) = INT_TABLE."TRAN_ACNO") AND MASTER."status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' LEFT OUTER JOIN (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", SUM(COALESCE(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float) ELSE (-1) * CAST("TRAN_AMOUNT" AS float) END, 0)) DAILY_AMOUNT FROM DAILYTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT), CAST(0 AS BIGINT)) <> 0 AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE" = '.$transtatus.' AND CAST("TRAN_DATE" AS date) <= CAST('.$date.' AS date) GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") DAILY_TABLE ON (MASTER."AC_ACNOTYPE" = DAILY_TABLE."TRAN_ACNOTYPE" AND CAST(MASTER."AC_TYPE" AS CHARACTER varying) = DAILY_TABLE."TRAN_ACTYPE" AND CAST(MASTER."BANKACNO" AS CHARACTER varying) = DAILY_TABLE."TRAN_ACNO") WHERE (MASTER."AC_OPDATE" IS NULL OR CAST(MASTER."AC_OPDATE" AS date) <= CAST('.$date.' AS date)) AND MASTER."status" = '.$transtatus.' AND MASTER."SYSCHNG_LOGIN" IS NOT NULL AND MASTER."BRANCH_CODE" = '.$transtatus.' AND (MASTER."AC_CLOSEDT" IS NULL OR CAST(MASTER."AC_CLOSEDT" AS date) > CAST('.$date.' AS date)) AND MASTER."AC_ACNOTYPE" IN ('.$TD.', '.$SB.', '.$CA.', '.$AG.', '.$LK.','.$PG.', '.$CC.','.$DS.','.$LN.') ) ALIAS84 LEFT JOIN SCHEMAST ON SCHEMAST.ID=ALIAS84."AC_TYPE" WHERE CLOSING_BALANCE = 0 ORDER BY SCHEMAST."S_APPL" ,"BANKACNO"';
   echo $query;
$sql =  pg_query($conn,$query);
$i = 0;



// if (pg_num_rows($sql) == 0) {
//     include "errormsg.html";
// }else {

while($row = pg_fetch_assoc($sql)){

    $stot1=$stot1+ $row['closing_balance'];

 

    $tmp=[
        
      
        "AC_NO"=> $row["AC_NO"],
        "AC_NAME"=> $row["AC_NAME"],
        "closing_balance" => $row["closing_balance"],
        "AC_OPDATE" => $row["AC_OPDATE"],
        "Branch" => $Branch1,
        "bankname" => $bankname1,
        "date" => $date1,
		"BRANCH_CODE"=>$BRANCH_CODE1,
		"scheme" => $row["S_APPL"]. ' ' . $row['S_NAME'],
        'stot1'=> sprintf("%.2f", ($stot1 + 0.0)),

        
        

    ];
    $data[$i]=$tmp;
    $i++;
    
}
ob_end_clean();

$config = ['driver'=>'array','data'=>$data];
//print_r($data);
$report = new PHPJasperXML();
$report->load_xml_file($filename)    
     ->setDataSource($config)
     ->export('Pdf');
    
//  }  
?>
