<?php
ob_start();
include "main.php";
require_once('dbconnect.php');

// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
ini_set('MAX_EXECUTION_TIME', 3600);
// error_reporting(E_ALL);


use simitsdk\phpjasperxml\PHPJasperXML;
$filename = __DIR__.'/AccountWiseLoanOverDueList.jrxml';

$data = [];
$i=0;
$faker = Faker\Factory::create('en_US');
$dd="'DD/MM/YYYY'";
$schemeName=$_GET['AC_TYPE'];
$bankName  = $_GET['bankName'];
$BranchName = $_GET['BranchName'];
$schemeCode=$_GET['schemeCode'];
$BRANCH_CODE=$_GET['BRANCH_CODE'];
$TOBE_RECOVER_AMT= 0;
$Dates =$_GET['date1'];
$minvalue =$_GET['DUEINSTALLMENTFROM'];
$maxvalue =$_GET['DUEINSTALLMENTO'];
$Dates =$_GET['date1'];
$id =$_GET['id'];


// echo $id;

//$date="'31/03/2024'";
$date1="'26/08/2023'";
$bankName = str_replace("'", "", $bankName);
$BranchName = str_replace("'", "", $BranchName);
$Dates1 = str_replace("'", "", $Dates);

$LN= "'LN'";
$CC ="'CC'";
$DS="'DS'";
$flags=$_GET['FLAG'];
$Space="' '";
$D="'D'";
$P="'P'";
$DUEBAL= "' DUEBAL'";
$status="'1'";  
$AC_TYPE = $_GET['AC_TYPE'];
$schemeCode=$_GET['schemeCode'];
$BRANCH_CODE=$_GET['BRANCH_CODE'];
$LIST=$_GET['LIST'];
$FIRSTNO=$_GET['FIRST_NO'];
$SECONDNO=$_GET['SECOND_NO'];
$flag  = $_GET['flag'];


$checktype;
 $flag == 1? $checktype='true': $checktype='false';
// echo $flag;
// echo $flags;
// echo $checktype;

//RANGE
// $query;
// echo $BRANCH_CODE;


if($BRANCH_CODE==0)
{
if($flag==0)
{
$query= 'SELECT *
FROM
	(SELECT SCHEMAST."S_APPL",
			SCHEMAST."S_APPL" || '.$Space.' || SCHEMAST."S_NAME" "SCHEME",
			LNMASTER."AC_ACNOTYPE",
			LNMASTER."AC_TYPE",
			LNMASTER.ID LNMASTERID,
			LNMASTER."AC_NO",
			LNMASTER."AC_MONTHS",
			LNMASTER."AC_NAME",
			LNMASTER."BANKACNO",
			LNMASTER."AC_OPDATE",
			LNMASTER."idmasterID",
			LNMASTER."AC_CLOSEDT",
			DIRECTORMASTER.ID || '.$Space.' || DIRECTORMASTER."NAME" "DIRECTORMASTER",
			"AC_RECOMMEND_BY" "DIRECTOR",
			AUTHORITYMASTER.ID || '.$Space.' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER",
			"AC_AUTHORITY" "AUTHORITY",
			RECOVERYCLEARKMASTER.ID || '.$Space.' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER",
			"AC_RECOVERY_CLERK",
			OWNBRANCHMASTER.ID || '.$Space.' || OWNBRANCHMASTER."NAME" "BRANCH",
			LNMASTER."BRANCH_CODE",
			CUSTOMERADDRESS."AC_CTCODE" "CITY",
			CITYMASTER."CITY_NAME" "CITYNAME",
			CUSTOMERADDRESS."AC_HONO" || '.$Space.' || CUSTOMERADDRESS."AC_WARD" || '.$Space.' || CUSTOMERADDRESS."AC_ADDR" || '.$Space.' || CUSTOMERADDRESS."AC_GALLI" || '.$Space.' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",LNMASTER."AC_MORATORIUM_PERIOD",
			LNMASTER."AC_SANCTION_AMOUNT",
			LNMASTER."AC_GRACE_PERIOD",
			LNMASTER."AC_REPAYMODE",
			IDMASTER."AC_MOBILENO",
			(COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			END,0) + COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0))"CLOSING_BALANCE",
			(COALESCE(CASE LNMASTER."AC_OP_CD"WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP"
			ELSE (-1) * LNMASTER."AC_RECBLEINT_OP"END,0) + 
            COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0) + 
            COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)END,
            0) + COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),
            0)) "RECPAY_INT_AMOUNT",
			LNMASTER."AC_INSTALLMENT",
			OIRINTBALANCE(SCHEMAST."S_APPL",
            LNMASTER."BANKACNO",'.$Dates.', 0) "OVERDUEINTEREST",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) else 0 end )"TOTALINSTALLMENTS",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.',' .$DUEBAL.',0) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) else 0 end) "DUEINSTALLMENT",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) - DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",
			'.$Dates.',' .$DUEBAL.',0)) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "PAIDINSTALLMENTS",
            DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.','.$DUEBAL.', 0) "DUEBALANCE",
			"AC_EXPIRE_DATE", OVERDUEDATE(
				SCHEMAST."S_APPL", 
				LNMASTER."BANKACNO", 
				CAST('.$Dates.' AS CHARACTER VARYING), 
				CAST(
				  DUEBALANCE(
					CAST(
					  SCHEMAST."S_APPL" AS CHARACTER VARYING
					), 
					LNMASTER."BANKACNO", 
					'.$Dates.', 
					' .$DUEBAL.', 
					0
				  ) AS CHARACTER VARYING
				), 
				CAST(
				  LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING
				)
			  ) "OVERDUEDATE" 
			  FROM LNMASTER
		    LEFT JOIN SCHEMAST ON SCHEMAST.ID = LNMASTER."AC_TYPE"
		    LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID = CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
		    LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID = CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
		    LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID = LNMASTER."AC_AUTHORITY"
		    LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID = LNMASTER."BRANCH_CODE"
		    LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID" = LNMASTER."idmasterID"
		    AND CUSTOMERADDRESS."AC_ADDTYPE" = '.$P.'
		    LEFT JOIN CITYMASTER ON CITYMASTER.ID = CUSTOMERADDRESS."AC_CTCODE"
		    LEFT JOIN IDMASTER ON IDMASTER.ID = LNMASTER."idmasterID",
            (SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
		    COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT"
			FROM
			(SELECT *
			FROM
			(SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "TRAN_AMOUNT",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "OTHER10_AMOUNT",0 "DAILY_AMOUNT",
			0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
			FROM LOANTRAN WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO"
            UNION ALL SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO", 
			COALESCE(SUM(CASE "TRAN_DRCR"WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "DAILY_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR" WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
		    ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "DAILY_RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR"WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "DAILY_OTHER10_AMOUNT",0 "TRAN_AMOUNT",0 "RECPAY_INT_AMOUNT",0 "OTHER10_AMOUNT"
			FROM DAILYTRAN
			WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_STATUS" = '.$status.'
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") RS
            ORDER BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO")AMOUNT
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") TRANTABLE
		    WHERE LNMASTER."AC_ACNOTYPE" = TRANTABLE."TRAN_ACNOTYPE"
			AND LNMASTER."AC_TYPE" = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
			AND LNMASTER."BANKACNO" = TRANTABLE."TRAN_ACNO"
			AND LNMASTER."status" = 1
			AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
		    ORDER BY SCHEMAST."S_APPL",
			LNMASTER."BANKACNO") AS S
            WHERE CAST(S."DUEINSTALLMENT" AS INTEGER) <= '.$maxvalue.'
	        AND CAST(S."DUEINSTALLMENT" AS INTEGER) <= '.$minvalue.'
			AND (CAST(S."AC_CLOSEDT" AS DATE) IS NULL OR CAST(S."AC_CLOSEDT" AS DATE) > To_DATE('.$Dates.','.$dd.'))
	        AND CAST(S."AC_EXPIRE_DATE" AS DATE) >= TO_DATE('.$Dates.','.$dd.') AND S."DUEBALANCE" <> 0 ';

			// echo $query;
    }

		else if($flag==1)
		{
			$query= 'SELECT *
FROM
	(SELECT SCHEMAST."S_APPL",
			SCHEMAST."S_APPL" || '.$Space.' || SCHEMAST."S_NAME" "SCHEME",
			LNMASTER."AC_ACNOTYPE",
			LNMASTER."AC_TYPE",
			LNMASTER.ID LNMASTERID,
			LNMASTER."AC_NO",
			LNMASTER."AC_MONTHS",
			LNMASTER."AC_NAME",
			LNMASTER."BANKACNO",
			LNMASTER."AC_OPDATE",
			LNMASTER."idmasterID",
			LNMASTER."AC_CLOSEDT",
			DIRECTORMASTER.ID || '.$Space.' || DIRECTORMASTER."NAME" "DIRECTORMASTER",
			"AC_RECOMMEND_BY" "DIRECTOR",
			AUTHORITYMASTER.ID || '.$Space.' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER",
			"AC_AUTHORITY" "AUTHORITY",
			RECOVERYCLEARKMASTER.ID || '.$Space.' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER",
			"AC_RECOVERY_CLERK",
			OWNBRANCHMASTER.ID || '.$Space.' || OWNBRANCHMASTER."NAME" "BRANCH",
			LNMASTER."BRANCH_CODE",
			CUSTOMERADDRESS."AC_CTCODE" "CITY",
			CITYMASTER."CITY_NAME" "CITYNAME",
			CUSTOMERADDRESS."AC_HONO" || '.$Space.' || CUSTOMERADDRESS."AC_WARD" || '.$Space.' || CUSTOMERADDRESS."AC_ADDR" || '.$Space.' || CUSTOMERADDRESS."AC_GALLI" || '.$Space.' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",LNMASTER."AC_MORATORIUM_PERIOD",
			LNMASTER."AC_SANCTION_AMOUNT",
			LNMASTER."AC_GRACE_PERIOD",
			LNMASTER."AC_REPAYMODE",
			IDMASTER."AC_MOBILENO",
			(COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			END,0) + COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0))"CLOSING_BALANCE",
			(COALESCE(CASE LNMASTER."AC_OP_CD"WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP"
			ELSE (-1) * LNMASTER."AC_RECBLEINT_OP"END,0) + 
            COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0) + 
            COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)END,
            0) + COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),
            0)) "RECPAY_INT_AMOUNT",
			LNMASTER."AC_INSTALLMENT",
			OIRINTBALANCE(SCHEMAST."S_APPL",
            LNMASTER."BANKACNO",'.$Dates.', 0) "OVERDUEINTEREST",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "TOTALINSTALLMENTS",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.',' .$DUEBAL.',0) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))ELSE 0 END ) "DUEINSTALLMENT",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) - DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",
			'.$Dates.',' .$DUEBAL.',0)) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "PAIDINSTALLMENTS",
            DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.','.$DUEBAL.', 0) "DUEBALANCE",
			"AC_EXPIRE_DATE", OVERDUEDATE(
				SCHEMAST."S_APPL", 
				LNMASTER."BANKACNO", 
				CAST('.$Dates.' AS CHARACTER VARYING), 
				CAST(
				  DUEBALANCE(
					CAST(
					  SCHEMAST."S_APPL" AS CHARACTER VARYING
					), 
					LNMASTER."BANKACNO", 
					'.$Dates.', 
					' .$DUEBAL.', 
					0
				  ) AS CHARACTER VARYING
				), 
				CAST(
				  LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING
				)
			  ) "OVERDUEDATE" 
			  FROM LNMASTER
		    LEFT JOIN SCHEMAST ON SCHEMAST.ID = LNMASTER."AC_TYPE"
		    LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID = CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
		    LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID = CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
		    LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID = LNMASTER."AC_AUTHORITY"
		    LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID = LNMASTER."BRANCH_CODE"
		    LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID" = LNMASTER."idmasterID"
		    AND CUSTOMERADDRESS."AC_ADDTYPE" = '.$P.'
		    LEFT JOIN CITYMASTER ON CITYMASTER.ID = CUSTOMERADDRESS."AC_CTCODE"
		    LEFT JOIN IDMASTER ON IDMASTER.ID = LNMASTER."idmasterID",
            (SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
		    COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT"
			FROM
			(SELECT *
			FROM
			(SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "TRAN_AMOUNT",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "OTHER10_AMOUNT",0 "DAILY_AMOUNT",
			0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
			FROM LOANTRAN WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO"
            UNION ALL SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(CASE "TRAN_DRCR"WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "DAILY_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR" WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
		    ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "DAILY_RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR"WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "DAILY_OTHER10_AMOUNT",0 "TRAN_AMOUNT",0 "RECPAY_INT_AMOUNT",0 "OTHER10_AMOUNT"
			FROM DAILYTRAN
			WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_STATUS" = '.$status.'
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") RS
            ORDER BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO")AMOUNT
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") TRANTABLE
		    WHERE LNMASTER."AC_ACNOTYPE" = TRANTABLE."TRAN_ACNOTYPE"
			AND LNMASTER."AC_TYPE" = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
			AND LNMASTER."BANKACNO" = TRANTABLE."TRAN_ACNO"
			AND LNMASTER."status" = 1
			AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
		    ORDER BY SCHEMAST."S_APPL",
			LNMASTER."BANKACNO") AS S
            WHERE CAST(S."DUEINSTALLMENT" AS INTEGER) <= '.$maxvalue.'
	        AND CAST(S."DUEINSTALLMENT" AS INTEGER) >= '.$minvalue.'
			AND CAST(S."AC_EXPIRE_DATE" AS DATE) <= TO_DATE('.$Dates.','.$dd.')			AND S."BANKACNO" IN ('.$FIRSTNO.' , '.$SECONDNO.')
			AND (CAST(S."AC_CLOSEDT" AS DATE) IS NULL OR CAST(S."AC_CLOSEDT" AS DATE) > To_DATE('.$Dates.','.$dd.'))
			AND S."AC_TYPE" ='.$schemeName.' 	AND S."DUEBALANCE" <> 0 ';
			
    // echo $query;
	}
}


else
{
    if($flags==0)
{
$query= 'SELECT *
FROM
	(SELECT SCHEMAST."S_APPL",
			SCHEMAST."S_APPL" || '.$Space.' || SCHEMAST."S_NAME" "SCHEME",
			LNMASTER."AC_ACNOTYPE",
			LNMASTER."AC_TYPE",
			LNMASTER.ID LNMASTERID,
			LNMASTER."AC_NO",
			LNMASTER."AC_MONTHS",
			LNMASTER."AC_NAME",
			LNMASTER."BANKACNO",
			LNMASTER."AC_OPDATE",
			LNMASTER."idmasterID",
			LNMASTER."AC_CLOSEDT",
			DIRECTORMASTER.ID || '.$Space.' || DIRECTORMASTER."NAME" "DIRECTORMASTER",
			"AC_RECOMMEND_BY" "DIRECTOR",
			AUTHORITYMASTER.ID || '.$Space.' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER",
			"AC_AUTHORITY" "AUTHORITY",
			RECOVERYCLEARKMASTER.ID || '.$Space.' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER",
			"AC_RECOVERY_CLERK",
			OWNBRANCHMASTER.ID || '.$Space.' || OWNBRANCHMASTER."NAME" "BRANCH",
			LNMASTER."BRANCH_CODE",
			CUSTOMERADDRESS."AC_CTCODE" "CITY",
			CITYMASTER."CITY_NAME" "CITYNAME",
			CUSTOMERADDRESS."AC_HONO" || '.$Space.' || CUSTOMERADDRESS."AC_WARD" || '.$Space.' || CUSTOMERADDRESS."AC_ADDR" || '.$Space.' || CUSTOMERADDRESS."AC_GALLI" || '.$Space.' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",LNMASTER."AC_MORATORIUM_PERIOD",
			LNMASTER."AC_SANCTION_AMOUNT",
			LNMASTER."AC_GRACE_PERIOD",
			LNMASTER."AC_REPAYMODE",
			IDMASTER."AC_MOBILENO",
			(COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			END,0) + COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0))"CLOSING_BALANCE",
			(COALESCE(CASE LNMASTER."AC_OP_CD"WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP"
			ELSE (-1) * LNMASTER."AC_RECBLEINT_OP"END,0) + 
            COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0) + 
            COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)END,
            0) + COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),
            0)) "RECPAY_INT_AMOUNT",
			LNMASTER."AC_INSTALLMENT",
			OIRINTBALANCE(SCHEMAST."S_APPL",
            LNMASTER."BANKACNO",'.$Dates.', 0) "OVERDUEINTEREST",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end  ) "TOTALINSTALLMENTS",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.',' .$DUEBAL.',0) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) else 0 end )"DUEINSTALLMENT",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) - DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",
			'.$Dates.',' .$DUEBAL.',0)) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "PAIDINSTALLMENTS",
            DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.','.$DUEBAL.', 0) "DUEBALANCE",
			"AC_EXPIRE_DATE", OVERDUEDATE(
				SCHEMAST."S_APPL", 
				LNMASTER."BANKACNO", 
				CAST('.$Dates.' AS CHARACTER VARYING), 
				CAST(
				  DUEBALANCE(
					CAST(
					  SCHEMAST."S_APPL" AS CHARACTER VARYING
					), 
					LNMASTER."BANKACNO", 
					'.$Dates.', 
					' .$DUEBAL.', 
					0
				  ) AS CHARACTER VARYING
				), 
				CAST(
				  LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING
				)
			  ) "OVERDUEDATE" 
			  FROM LNMASTER
		    LEFT JOIN SCHEMAST ON SCHEMAST.ID = LNMASTER."AC_TYPE"
		    LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID = CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
		    LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID = CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
		    LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID = LNMASTER."AC_AUTHORITY"
		    LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID = LNMASTER."BRANCH_CODE"
		    LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID" = LNMASTER."idmasterID"
		    AND CUSTOMERADDRESS."AC_ADDTYPE" = '.$P.'
		    LEFT JOIN CITYMASTER ON CITYMASTER.ID = CUSTOMERADDRESS."AC_CTCODE"
		    LEFT JOIN IDMASTER ON IDMASTER.ID = LNMASTER."idmasterID",
            (SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
		    COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT"
			FROM
			(SELECT *
			FROM
			(SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "TRAN_AMOUNT",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "OTHER10_AMOUNT",0 "DAILY_AMOUNT",
			0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
			FROM LOANTRAN WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO"
            UNION ALL SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(CASE "TRAN_DRCR"WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "DAILY_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR" WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
		    ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "DAILY_RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR"WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "DAILY_OTHER10_AMOUNT",0 "TRAN_AMOUNT",0 "RECPAY_INT_AMOUNT",0 "OTHER10_AMOUNT"
			FROM DAILYTRAN
			WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_STATUS" = '.$status.'
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") RS
            ORDER BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO")AMOUNT
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") TRANTABLE
		    WHERE LNMASTER."AC_ACNOTYPE" = TRANTABLE."TRAN_ACNOTYPE"
			AND LNMASTER."AC_TYPE" = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
			AND LNMASTER."BANKACNO" = TRANTABLE."TRAN_ACNO"
			AND LNMASTER."status" = 1
			AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
		    ORDER BY SCHEMAST."S_APPL",
			LNMASTER."BANKACNO") AS S
            WHERE CAST(S."DUEINSTALLMENT" AS INTEGER) <= '.$maxvalue.'
	        AND CAST(S."DUEINSTALLMENT" AS INTEGER) >= '.$minvalue.'
			AND (CAST(S."AC_CLOSEDT" AS DATE) IS NULL OR CAST(S."AC_CLOSEDT" AS DATE) > To_DATE('.$Dates.','.$dd.'))
	        AND CAST(S."AC_EXPIRE_DATE" AS DATE) >= TO_DATE('.$Dates.','.$dd.')
			AND S."BANKACNO" BETWEEN '.$FIRSTNO.' AND '.$SECONDNO.' AND S."DUEBALANCE" <> 0 ';

			// echo $query;
    }


   //SELECTIVE
		else if($flags==1)
		{
        $query= 'SELECT *
        FROM
            (SELECT SCHEMAST."S_APPL",
                    SCHEMAST."S_APPL" || '.$Space.' || SCHEMAST."S_NAME" "SCHEME",
                    LNMASTER."AC_ACNOTYPE",
                    LNMASTER."AC_TYPE",
                    LNMASTER.ID LNMASTERID,
                    LNMASTER."AC_NO",
					LNMASTER."AC_MONTHS",
                    LNMASTER."AC_NAME",
                    LNMASTER."BANKACNO",
                    LNMASTER."AC_OPDATE",
                    LNMASTER."idmasterID",
                    LNMASTER."AC_CLOSEDT",
                    DIRECTORMASTER.ID || '.$Space.' || DIRECTORMASTER."NAME" "DIRECTORMASTER",
                    "AC_RECOMMEND_BY" "DIRECTOR",
                    AUTHORITYMASTER.ID || '.$Space.' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER",
                    "AC_AUTHORITY" "AUTHORITY",
                    RECOVERYCLEARKMASTER.ID || '.$Space.' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER",
                    "AC_RECOVERY_CLERK",
                    OWNBRANCHMASTER.ID || '.$Space.' || OWNBRANCHMASTER."NAME" "BRANCH",
                    LNMASTER."BRANCH_CODE",
                    CUSTOMERADDRESS."AC_CTCODE" "CITY",
                    CITYMASTER."CITY_NAME" "CITYNAME",
                    CUSTOMERADDRESS."AC_HONO" || '.$Space.' || CUSTOMERADDRESS."AC_WARD" || '.$Space.' || CUSTOMERADDRESS."AC_ADDR" || '.$Space.' || CUSTOMERADDRESS."AC_GALLI" || '.$Space.' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",LNMASTER."AC_MORATORIUM_PERIOD",
                    LNMASTER."AC_SANCTION_AMOUNT",
                    LNMASTER."AC_GRACE_PERIOD",
                    LNMASTER."AC_REPAYMODE",
                    IDMASTER."AC_MOBILENO",
                    (COALESCE(CASE LNMASTER."AC_OP_CD"
                    WHEN '.$D.' THEN CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
                    ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
                    END,0) + COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0))"CLOSING_BALANCE",
                    (COALESCE(CASE LNMASTER."AC_OP_CD"WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP"
                    ELSE (-1) * LNMASTER."AC_RECBLEINT_OP"END,0) + 
                    COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0) + 
                    COALESCE(CASE LNMASTER."AC_OP_CD"
                    WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)
                    ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)END,
                    0) + COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),
                    0)) "RECPAY_INT_AMOUNT",
                    LNMASTER."AC_INSTALLMENT",
                    OIRINTBALANCE(SCHEMAST."S_APPL",
                    LNMASTER."BANKACNO",'.$Dates.', 0) "OVERDUEINTEREST",
					(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "TOTALINSTALLMENTS",
                    (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.',' .$DUEBAL.',0) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) else 0 end )"DUEINSTALLMENT",
                    (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) - DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",
                    '.$Dates.',' .$DUEBAL.',0)) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "PAIDINSTALLMENTS",
                    DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.','.$DUEBAL.', 0) "DUEBALANCE",
                    "AC_EXPIRE_DATE", OVERDUEDATE(
                        SCHEMAST."S_APPL", 
                        LNMASTER."BANKACNO", 
                        CAST('.$Dates.' AS CHARACTER VARYING), 
                        CAST(
                          DUEBALANCE(
                            CAST(
                              SCHEMAST."S_APPL" AS CHARACTER VARYING
                            ), 
                            LNMASTER."BANKACNO", 
                            '.$Dates.', 
                            ' .$DUEBAL.', 
                            0
                          ) AS CHARACTER VARYING
                        ), 
                        CAST(
                          LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING
                        )
                      ) "OVERDUEDATE" 
                      FROM LNMASTER
                    LEFT JOIN SCHEMAST ON SCHEMAST.ID = LNMASTER."AC_TYPE"
                    LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID = CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
                    LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID = CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
                    LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID = LNMASTER."AC_AUTHORITY"
                    LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID = LNMASTER."BRANCH_CODE"
                    LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID" = LNMASTER."idmasterID"
                    AND CUSTOMERADDRESS."AC_ADDTYPE" = '.$P.'
                    LEFT JOIN CITYMASTER ON CITYMASTER.ID = CUSTOMERADDRESS."AC_CTCODE"
                    LEFT JOIN IDMASTER ON IDMASTER.ID = LNMASTER."idmasterID",
                    (SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
                    COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
                    COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
                    COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT"
                    FROM
                    (SELECT *
                    FROM
                    (SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",COALESCE(SUM(CASE "TRAN_DRCR"
                    WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
                    ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "TRAN_AMOUNT",COALESCE(SUM(CASE "TRAN_DRCR"
                    WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
                    ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "RECPAY_INT_AMOUNT",
                    COALESCE(SUM(CASE "TRAN_DRCR"
                    WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "OTHER10_AMOUNT",0 "DAILY_AMOUNT",
                    0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
                    FROM LOANTRAN WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
                    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
                    GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO"
                    UNION ALL SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
                    COALESCE(SUM(CASE "TRAN_DRCR"WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
                    ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "DAILY_AMOUNT",
                    COALESCE(SUM(CASE"TRAN_DRCR" WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
                    ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "DAILY_RECPAY_INT_AMOUNT",
                    COALESCE(SUM(CASE"TRAN_DRCR"WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)
                    ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "DAILY_OTHER10_AMOUNT",0 "TRAN_AMOUNT",0 "RECPAY_INT_AMOUNT",0 "OTHER10_AMOUNT"
                    FROM DAILYTRAN
                    WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
                    AND "TRAN_STATUS" = '.$status.'
                    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
                    GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") RS
                    ORDER BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO")AMOUNT
                    GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") TRANTABLE
                    WHERE LNMASTER."AC_ACNOTYPE" = TRANTABLE."TRAN_ACNOTYPE"
                    AND LNMASTER."AC_TYPE" = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
                    AND LNMASTER."BANKACNO" = TRANTABLE."TRAN_ACNO"
                    AND LNMASTER."status" = 1
                    AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
                    ORDER BY SCHEMAST."S_APPL",
                    LNMASTER."BANKACNO") AS S
                    WHERE CAST(S."DUEINSTALLMENT" AS INTEGER) <= '.$maxvalue.'
                    AND CAST(S."DUEINSTALLMENT" AS INTEGER) >= '.$minvalue.'
                    AND (CAST(S."AC_CLOSEDT" AS DATE) IS NULL OR CAST(S."AC_CLOSEDT" AS DATE) > To_DATE('.$Dates.','.$dd.'))
                    AND CAST(S."AC_EXPIRE_DATE" AS DATE) >= TO_DATE('.$Dates.','.$dd.')
                    AND S."BANKACNO" IN ('.$id.')
                    AND S."AC_TYPE" ='.$schemeName.'
                    AND S."BRANCH_CODE" IN ('.$BRANCH_CODE.') AND S."DUEBALANCE" <> 0';
        
                    // echo $query; 
    }



    //CALCULATE
		else if($flag==1)
		{
			$query= 'SELECT *
FROM
	(SELECT SCHEMAST."S_APPL",
			SCHEMAST."S_APPL" || '.$Space.' || SCHEMAST."S_NAME" "SCHEME",
			LNMASTER."AC_ACNOTYPE",
			LNMASTER."AC_TYPE",
			LNMASTER.ID LNMASTERID,
			LNMASTER."AC_NO",
			LNMASTER."AC_MONTHS",
			LNMASTER."AC_NAME",
			LNMASTER."BANKACNO",
			LNMASTER."AC_OPDATE",
			LNMASTER."idmasterID",
			LNMASTER."AC_CLOSEDT",
			DIRECTORMASTER.ID || '.$Space.' || DIRECTORMASTER."NAME" "DIRECTORMASTER",
			"AC_RECOMMEND_BY" "DIRECTOR",
			AUTHORITYMASTER.ID || '.$Space.' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER",
			"AC_AUTHORITY" "AUTHORITY",
			RECOVERYCLEARKMASTER.ID || '.$Space.' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER",
			"AC_RECOVERY_CLERK",
			OWNBRANCHMASTER.ID || '.$Space.' || OWNBRANCHMASTER."NAME" "BRANCH",
			LNMASTER."BRANCH_CODE",
			CUSTOMERADDRESS."AC_CTCODE" "CITY",
			CITYMASTER."CITY_NAME" "CITYNAME",
			CUSTOMERADDRESS."AC_HONO" || '.$Space.' || CUSTOMERADDRESS."AC_WARD" || '.$Space.' || CUSTOMERADDRESS."AC_ADDR" || '.$Space.' || CUSTOMERADDRESS."AC_GALLI" || '.$Space.' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",LNMASTER."AC_MORATORIUM_PERIOD",
			LNMASTER."AC_SANCTION_AMOUNT",
			LNMASTER."AC_GRACE_PERIOD",
			LNMASTER."AC_REPAYMODE",
			IDMASTER."AC_MOBILENO",
			(COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
			END,0) + COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0))"CLOSING_BALANCE",
			(COALESCE(CASE LNMASTER."AC_OP_CD"WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP"
			ELSE (-1) * LNMASTER."AC_RECBLEINT_OP"END,0) + 
            COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0) + 
            COALESCE(CASE LNMASTER."AC_OP_CD"
			WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)
			ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT)END,
            0) + COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),
            0)) "RECPAY_INT_AMOUNT",
			LNMASTER."AC_INSTALLMENT",
			OIRINTBALANCE(SCHEMAST."S_APPL",
            LNMASTER."BANKACNO",'.$Dates.', 0) "OVERDUEINTEREST",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) else 0 end ) "TOTALINSTALLMENTS",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.',' .$DUEBAL.',0) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "DUEINSTALLMENT",
			(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT) - DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",
			'.$Dates.',' .$DUEBAL.',0)) / CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))else 0 end ) "PAIDINSTALLMENTS",
            DUEBALANCE(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$Dates.','.$DUEBAL.', 0) "DUEBALANCE",
			"AC_EXPIRE_DATE", OVERDUEDATE(
				SCHEMAST."S_APPL", 
				LNMASTER."BANKACNO", 
				CAST('.$Dates.' AS CHARACTER VARYING), 
				CAST(
				  DUEBALANCE(
					CAST(
					  SCHEMAST."S_APPL" AS CHARACTER VARYING
					), 
					LNMASTER."BANKACNO", 
					'.$Dates.', 
					' .$DUEBAL.', 
					0
				  ) AS CHARACTER VARYING
				), 
				CAST(
				  LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING
				)
			  ) "OVERDUEDATE" 
			  FROM LNMASTER
		    LEFT JOIN SCHEMAST ON SCHEMAST.ID = LNMASTER."AC_TYPE"
		    LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID = CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
		    LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID = CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
		    LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID = LNMASTER."AC_AUTHORITY"
		    LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID = LNMASTER."BRANCH_CODE"
		    LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID" = LNMASTER."idmasterID"
		    AND CUSTOMERADDRESS."AC_ADDTYPE" = '.$P.'
		    LEFT JOIN CITYMASTER ON CITYMASTER.ID = CUSTOMERADDRESS."AC_CTCODE"
		    LEFT JOIN IDMASTER ON IDMASTER.ID = LNMASTER."idmasterID",
            (SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
		    COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT"
			FROM
			(SELECT *
			FROM
			(SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "TRAN_AMOUNT",COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE "TRAN_DRCR"
			WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "OTHER10_AMOUNT",0 "DAILY_AMOUNT",
			0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
			FROM LOANTRAN WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO"
            UNION ALL SELECT "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO",
			COALESCE(SUM(CASE "TRAN_DRCR"WHEN '.$D.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) "DAILY_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR" WHEN '.$D.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
		    ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)END),0) "DAILY_RECPAY_INT_AMOUNT",
			COALESCE(SUM(CASE"TRAN_DRCR"WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)
			ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)END),0) "DAILY_OTHER10_AMOUNT",0 "TRAN_AMOUNT",0 "RECPAY_INT_AMOUNT",0 "OTHER10_AMOUNT"
			FROM DAILYTRAN
			WHERE CAST("TRAN_DATE" AS date) <= TO_DATE('.$Dates.','.$dd.')
		    AND "TRAN_STATUS" = '.$status.'
		    AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") RS
            ORDER BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO")AMOUNT
			GROUP BY "TRAN_ACNOTYPE","TRAN_ACTYPE","TRAN_ACNO") TRANTABLE
		    WHERE LNMASTER."AC_ACNOTYPE" = TRANTABLE."TRAN_ACNOTYPE"
			AND LNMASTER."AC_TYPE" = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
			AND LNMASTER."BANKACNO" = TRANTABLE."TRAN_ACNO"
			AND LNMASTER."status" = 1
			AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
		    ORDER BY SCHEMAST."S_APPL",
			LNMASTER."BANKACNO") AS S
            WHERE CAST(S."DUEINSTALLMENT" AS INTEGER) <= '.$maxvalue.'
	        AND CAST(S."DUEINSTALLMENT" AS INTEGER) >= '.$minvalue.'
			AND CAST(S."AC_EXPIRE_DATE" AS DATE) <= TO_DATE('.$Dates.','.$dd.')			AND S."BANKACNO" IN ('.$FIRSTNO.' , '.$SECONDNO.')
			AND (CAST(S."AC_CLOSEDT" AS DATE) IS NULL OR CAST(S."AC_CLOSEDT" AS DATE) > To_DATE('.$Dates.','.$dd.'))
			AND S."AC_TYPE" ='.$schemeName.'
			AND S."BRANCH_CODE" IN ('.$BRANCH_CODE.')  
			AND S."DUEBALANCE" <> 0' ;

			// echo $query;


	}
}
 
            $sql =  pg_query($conn,$query);

			


			while ($row = pg_fetch_assoc($sql)) {


				$AC_NO = $row['AC_NO'];
		
				$query1 = 'SELECT 	gcustadd."AC_ADDR" AS "GADD",
				gcustadd."AC_WARD" AS "GADDAC_WARD", GUARANTERDETAILS.*
			FROM GUARANTERDETAILS
			LEFT OUTER JOIN CUSTOMERADDRESS AS GCUSTADD ON CAST(GUARANTERDETAILS."GAC_CUSTID" AS INTEGER) = GCUSTADD."idmasterID"
			WHERE "lnmasterID" =' . $row['idmasterID'];
			
			// echo $query1
			$sql1 =  pg_query($conn, $query1);
			$gaurantor='';
			$address='';
			if (pg_num_rows($sql1) == 0)
			{
		
			} 
			else 
			{
				// $counter = 1;
				while ($demo = pg_fetch_assoc($sql1)) {
					$address =  $demo['AC_NAME']. ' ';
					$gaurantor = $gaurantor .  $address ;
					
				}
			}
			// echo $gaurantor;
			

            $GRAND_TOTAL1= $GRAND_TOTAL1 + $row["AC_SANCTION_AMOUNT"];
            $GRAND_TOTAL2= $GRAND_TOTAL2 + $row["AC_INSTALLMENT"];
            $GRAND_TOTAL3= $GRAND_TOTAL3 + $row["RECPAY_INT_AMOUNT"];
            $GRAND_TOTAL4= $GRAND_TOTAL4 + $row["CLOSING_BALANCE"];
            $GRAND_TOTAL5= $GRAND_TOTAL5 + $row["DUEBALANCE"];
          
				$temp =
             	[
                 
                 'Scheme'=>$row['SCHEME'],
                 'AccountNumber'=>$row['AC_NO'],
                 'AccountName' =>$row['AC_NAME'],
                 'OpeningDate' =>$row['AC_OPDATE'],
                 'CityName' =>$row['CITYNAME'],
                
                 'ExpiryDate' =>$row['AC_EXPIRE_DATE'],
                 'Periods_Month' =>$row['AC_MONTHS'],
                 'SanctionAmount' =>$row['AC_SANCTION_AMOUNT'],
                 'InstallationAmount' =>$row['AC_INSTALLMENT'],
                 'Receivableinterest' =>$row['RECPAY_INT_AMOUNT'],
                'OutStandingBalance' =>$row['CLOSING_BALANCE'],
                 'DueBalance' =>$row['DUEBALANCE'],
                 'DueInstallment'=>$row['DUEINSTALLMENT'],
                
                 'SAmount'=> sprintf("%.2f",($GRAND_TOTAL1) + 0.0 ) ,
                 'InstallAmount'=>sprintf("%.2f",($GRAND_TOTAL2) + 0.0 ) ,
                 'ReceivIntr'=>sprintf("%.2f",($GRAND_TOTAL3) + 0.0 ) ,
                 'OutStandingB'=> sprintf("%.2f",($GRAND_TOTAL4) + 0.0 ) ,
                 'DueB' => sprintf("%.2f",($GRAND_TOTAL5) + 0.0 ) ,
                 
                 "bankName"  => $bankName,
				 "date1"  => $Dates1,
                 "BranchName"=>$BranchName,
                 "BRANCHCODE"=>$BRANCH_CODE,
				 "guranter"=>$gaurantor,

				//  "subreturn"=>$subreturn,
                 
             	];
             	$data[$i]=$temp;
             	$i++;
			}


         ob_end_clean();
          $config = ['driver'=>'array','data'=>$data];
         //print_r($data);
          $report = new PHPJasperXML();
           $report->load_xml_file($filename)    
               ->setDataSource($config)
               ->export('Pdf');
?>