<?php
 ob_start();
include "main.php";
require_once('dbconnect.php');


// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
// error_reporting(E_ALL);
//error_reporting(0);
use simitsdk\phpjasperxml\PHPJasperXML;

$filename = __DIR__.'/memberliability.jrxml';

$data = [];
//$row = [];
//$faker = Faker\Factandy::create('en_US');

$datefandmate = "'DD/MM/YYYY'";
$var="''";
$var1="'G'";
$var2="'H'";
$AC_TYPE="'1'";
$MEMBER_TYPE="'0'";
$AC_MEMBTYPE="'1'";
$AC_MEMBNO="'100000'";
$var3="'2'";
$MEMBER_TYPE1="'1'";
$stdate="'01/04/2016'";
$etdate="'12/08/2022'";
$hypen="'.$hypen.'";
$zero="'0'";
$M="'M'";
$Q="'Q'";
$H="'H'";
$Y="'Y'";
$D="'D'";
$C="'C'";
$TRAN_STATUS="'1'";
$AC_ACNOTYPE="'CC'";





$AC_TYPE = $_GET['AC_TYPE'];
$MEMBER_NO = $_GET['MEMBER_NO'];
$date = $_GET['branch'];
$branchName = $_GET['branchName'];
$bankName = $_GET['bankName'];


// $bankName = str_replace(''', '', $bankName);
// $stdate_ = str_replace(''', '', $stdate);
// $etdate_ = str_replace(''', '', $etdate);
//$branchName = str_replace(''', '', $branchName);


$query='(SELECT TMP1.* , 
CASE   
WHEN TMP1.CLOSEDATE IS NULL
THEN  CAST(TMP1.SANCTION_AMOUNT AS INTEGER)
ELSE 0 
END SANCTIONAMT, 
 CASE COALESCE(CAST(TMP1.INSTALLMENT AS INTEGER),0)
 WHEN 0 THEN 0  
 ELSE FLOOR(COALESCE(CAST(DUE_BALANCE AS INTEGER),0)/ CAST(INSTALLMENT AS INTEGER)) END DUE_INSTALLMENT 
FROM ( SELECT MAST."AC_ACNOTYPE", MAST."AC_TYPE", MAST.BANKACNO
    , CASE AC_BRANCH  
   WHEN '.$var.'  
   THEN  CASE   WHEN MAST.AC_HOLDER_NAME IS NULL 
                THEN  LNMASTER."AC_NAME" 
                  ELSE MAST.AC_HOLDER_NAME 
                END  
   ELSE MAST.AC_HOLDER_NAME 
   END AC_NAME 
    , CASE AC_BRANCH 
    WHEN '.$var.'  
    THEN  CASE   WHEN MAST.AC_HOLDER_NAME IS NULL  
                 THEN  '.$var1.' 
                 ELSE '.$var2.'
                 END 
   ELSE '.$var1.'
   END LIABILITY_TYPE, MAST.SR_NO, G_MEMBERNO, AC_BRANCH 
    , SHMASTER."BANKACNO" MEMBER_NO, SHMASTER."AC_NAME" MEMBER_NAME,  SHMASTER."AC_HONO" , 
SHMASTER."AC_WARD" , SHMASTER."AC_ADDR" , SHMASTER."AC_GALLI" ,
 SHMASTER."AC_AREA",
 SHMASTER."AC_CTCODE", SHMASTER."AC_PIN"
    , SHMASTER.SALNAME, SANCTION_AMOUNT, OPDATE,  EXPDATE, CLOSEDATE, INSTALLMENT 
    , CASE AC_BRANCH  WHEN '.$var.' THEN  COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) ELSE 0 END LEDGER_BALANCE 
    , CASE AC_BRANCH  WHEN '.$var.' THEN  COALESCE(VWTMPZLIBOVERDUE.DUE_BALANCE,0) ELSE 0 END DUE_BALANCE 
FROM LNMASTER, 

( SELECT  SHMASTER."AC_ACNOTYPE" ,  SHMASTER."AC_TYPE"  , SHMASTER."BANKACNO" , 
 SHMASTER."AC_NAME" , CUSTOMERADDRESS."AC_HONO" , 
CUSTOMERADDRESS."AC_WARD" , CUSTOMERADDRESS."AC_ADDR" , CUSTOMERADDRESS."AC_GALLI" ,
 CUSTOMERADDRESS."AC_AREA",
 CUSTOMERADDRESS."AC_CTCODE", CUSTOMERADDRESS."AC_PIN",0 AC_SALARYDIVISION_CODE, 
 '.$var.' SALNAME 
 FROM  SHMASTER  
 LEFT OUTER JOIN CUSTOMERADDRESS ON  SHMASTER."idmasterID"=CUSTOMERADDRESS."idmasterID" 
 left outer join schemast on SHMASTER."AC_TYPE"=SCHEMAST.id 
 WHERE SHMASTER."AC_TYPE" = '.$AC_TYPE.' AND  SCHEMAST."MEMBER_TYPE"='.$MEMBER_TYPE.' 
)SHMASTER,
(SELECT TMP."AC_ACNOTYPE", TMP."AC_TYPE", TMP.AC_HOLDER_NAME 
, CASE TMP.AC_GUARANTER  
  WHEN 0  
  THEN TMP.AC_HOLDER    
  ELSE TMP.AC_GUARANTER 
  END BANKACNO, SR_NO, G_MEMBERNO, AC_BRANCH 
, SANCTION_AMOUNT, OPDATE, EXPDATE, CLOSEDATE, INSTALLMENT
FROM  
( SELECT "AC_ACNOTYPE", "AC_TYPE", CAST("BANKACNO" AS FLOAT) AC_HOLDER , 0 AC_GUARANTER, 1 SR_NO, "AC_NAME" AC_HOLDER_NAME, 0 G_MEMBERNO, 
'.$var.' AC_BRANCH, 
"AC_SANCTION_AMOUNT" SANCTION_AMOUNT, "AC_OPDATE" OPDATE, "AC_EXPIRE_DATE" EXPDATE, "AC_CLOSEDT" CLOSEDATE,
 "AC_INSTALLMENT" INSTALLMENT FROM LNMASTER 
WHERE "AC_MEMBTYPE" = '.$AC_MEMBTYPE.' AND "AC_MEMBNO" = '.$AC_MEMBNO.'

 Union All 
SELECT GUARANTERDETAILS."AC_ACNOTYPE",CAST(GUARANTERDETAILS."AC_TYPE" AS FLOAT) , 0 AC_HOLDER, CAST(GUARANTERDETAILS."AC_NO" AS FLOAT) AC_GUARANTER,
 '.$var3.' SR_NO, NULL AC_HOLDER_NAME, CAST(LNMASTER."AC_MEMBNO"  AS INTEGER) G_MEMBERNO, '.$var.' AC_BRANCH 
, "AC_SANCTION_AMOUNT" SANCTION_AMOUNT, "AC_OPDATE" OPDATE, "AC_EXPIRE_DATE" 
EXPDATE,  "AC_CLOSEDT" CLOSEDATE, "AC_INSTALLMENT" INSTALLMENT 
FROM GUARANTERDETAILS
INNER JOIN LNMASTER ON GUARANTERDETAILS."AC_NO" = LNMASTER."BANKACNO" 
WHERE
(GUARANTERDETAILS."EXP_DATE" IS NULL
   OR CAST(GUARANTERDETAILS."EXP_DATE" AS DATE) > CAST('.$stdate.' AS DATE)) 
 AND "MEMBER_TYPE" = '.$MEMBER_TYPE1.' AND "MEMBER_NO" = '.$AC_MEMBNO.'

 Union All
SELECT LNMASTER."AC_ACNOTYPE" AC_ACNOTYPE, LNMASTER."AC_TYPE" AC_TYPE 
, LNMASTER."AC_NO" AC_HOLDER, 0 AC_GUARANTER, 2 SR_NO, GUARANTERDETAILS."AC_NAME" AC_HOLDER_NAME 
, CAST(GUARANTERDETAILS."MEMBER_NO" AS INTEGER) G_MEMBERNO, '.$var.' AC_BRANCH , 
"AC_SANCTION_AMOUNT" SANCTION_AMOUNT,  "AC_OPDATE" OPDATE, "AC_EXPIRE_DATE" EXPDATE 
, "AC_CLOSEDT" CLOSEDATE, "AC_INSTALLMENT" INSTALLMENT
FROM LNMASTER
INNER JOIN GUARANTERDETAILS ON LNMASTER."BANKACNO" = GUARANTERDETAILS."AC_NO" 
 WHERE 
  (GUARANTERDETAILS."EXP_DATE" IS NULL
  OR CAST(GUARANTERDETAILS."EXP_DATE" AS DATE) > CAST('.$stdate.' AS DATE))
  AND LNMASTER."AC_MEMBTYPE" = '.$MEMBER_TYPE1.' AND LNMASTER."AC_MEMBNO" = '.$AC_MEMBNO.'
) TMP ) MAST 

LEFT OUTER JOIN LNMASTER LN ON MAST.BANKACNO = CAST(LN."BANKACNO" AS FLOAT)
                         

LEFT OUTER JOIN(
SELECT FINALOVERDUE.*,
 CASE INSTTYPE
 WHEN 0 THEN 0 
 ELSE cast((((extract( year FROM cast(OVERDUE_DATE as date) )
    - extract( year FROM cast('.$stdate.' as date) )) *12) 
   + extract(MONTH FROM cast(OVERDUE_DATE as date) ) 
   - extract(MONTH FROM cast('.$stdate.' as date) ))as integer)
     /INSTTYPE
 END DUE_INSTS 
FROM (

SELECT FINALTABLE.*  ,
 overduedate(CAST("AC_TYPE" AS INTEGER) ,CAST( "BANKACNO" AS CHARACTER VARYING) ,
 CAST('.$etdate.' AS CHARACTER VARYING), CAST(COALESCE(DUE_BALANCE,0) AS CHARACTER VARYING), 
 CAST(COALESCE(AC_INSTALLMENT,0)AS CHARACTER VARYING))OVERDUE_DATE
 
 FROM 
( SELECT "AC_ACNOTYPE" , "AC_TYPE" , "BANKACNO" ,
 COALESCE(CLOSING_BALANCE,0) CLOSING_BALANCE 
, CASE LEFT(CAST(COALESCE(DUE_BALANCE,0)AS CHARACTER VARYING) ,1) 
  WHEN '.$hypen.' THEN '.$zero.'
 WHEN '.$zero.' THEN '.$zero.'
 ELSE 
   CASE left(cast((COALESCE(CLOSING_BALANCE,0) - COALESCE(DUE_BALANCE,0))AS CHARACTER VARYING),1)
   WHEN '.$hypen.'
   THEN COALESCE(CLOSING_BALANCE,0)
   ELSE DUE_BALANCE
   END 
   END DUE_BALANCE, 
   COALESCE(AC_INSTALLMENT,0) AC_INSTALLMENT, INSTTYPE 
FROM ( 
SELECT "AC_ACNOTYPE" , "AC_TYPE" , "BANKACNO" ,
COALESCE(CLOSING_BALANCE,0) CLOSING_BALANCE 
, CASE COALESCE(NO_OF_MONTHS,0) 
 WHEN '.$zero.' THEN '.$zero.' 
 ELSE CASE LEFT(CAST(COALESCE(NO_OF_MONTHS,0)AS CHARACTER VARYING) ,1)
      WHEN '.$hypen.' THEN '.$zero.'
   WHEN '.$zero.' THEN '.$zero.'  
    ELSE ((COALESCE(NO_OF_MONTHS ,0) * AC_INSTALLMENT )- AC_SANCTION_AMOUNT)+ COALESCE(CLOSING_BALANCE,0)
    END 
    END  DUE_BALANCE , AC_INSTALLMENT, INSTTYPE 
FROM ( 
SELECT "AC_ACNOTYPE" , "AC_TYPE" , "BANKACNO" , 
          CASE INSTTYPE 
      WHEN 0  THEN 0  
      ELSE 
        (((extract( year FROM cast('.$etdate.' as date)) 
      - extract( year FROM (SELECT CAST(ASONDATE AS DATE) + COALESCE(AC_MORATORIUM_PERIOD ,0)) ))*12)
      + (extract(MONTH FROM cast('.$etdate.' as date ))
      - extract(MONTH FROM (SELECT CAST(ASONDATE AS DATE) + COALESCE(AC_MORATORIUM_PERIOD ,0)) ) ))
                      /INSTTYPE
      END NO_OF_MONTHS , AC_INSTALLMENT , AC_SANCTION_AMOUNT , CLOSING_BALANCE, INSTTYPE
FROM ( 
SELECT  LNMASTER."AC_ACNOTYPE" , LNMASTER."AC_TYPE" , LNMASTER."BANKACNO" , LNMASTER."AC_OPDATE",
  COALESCE(cast("AC_INSTALLMENT" as float),0) AC_INSTALLMENT , COALESCE(cast("AC_SANCTION_AMOUNT" as float),0) AC_SANCTION_AMOUNT 
  , CASE  cast(SCHEMAST."GRACE_PERIOD_APPLICABLE" as integer)
  WHEN 0  
  THEN  cast(LNMASTER."AC_OPDATE"  as date)
  ELSE ( select cast(lnmaster."AC_OPDATE" as date) + coalesce(cast(LNMASTER."AC_GRACE_PERIOD" as integer),0)) 
  END ASONDATE                       
, COALESCE(
  CASE cast(SCHEMAST."MORATORIUM_APPLICABLE" as integer) 
  WHEN 0  THEN  0 
  ELSE cast(LNMASTER."AC_MORATORIUM_PERIOD"  as integer)
  END,0) AC_MORATORIUM_PERIOD 
, COALESCE(
  CASE "AC_REPAYMODE" 
  WHEN '.$M.' THEN  1  
  WHEN '.$Q.' THEN  3  
  WHEN '.$H.' THEN  6 
  WHEN '.$Y.' THEN 12 
  ELSE 0 END,0) INSTTYPE 
, COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) CLOSING_BALANCE 
From LNMASTER
  
LEFT OUTER JOIN(SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."BANKACNO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.' as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
  
  Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.' AS DATE)))

)VWTMPZBALANCELIABLITY
  ON cast(LNMASTER."BANKACNO" as float) = cast(VWTMPZBALANCELIABLITY."BANKACNO" as float) 
inner join schemast on LNMASTER."AC_TYPE" = SCHEMAST.id
where 
  cast(LNMASTER."AC_EXPIRE_DATE" as date) > Cast('.$stdate.' as date) 
AND (LNMASTER."AC_OPDATE" IS NULL 
OR cast(LNMASTER."AC_OPDATE"  as date)<= cast('.$etdate.'as date))
AND (LNMASTER."AC_CLOSEDT" IS NULL
OR cast(LNMASTER."AC_CLOSEDT" as date) > cast('.$stdate.'as date))
AND cast(SCHEMAST."S_DUE_LIST_ALLOW" as integer) = 0 
) TMP 
WHERE (SELECT cast(ASONDATE as DATE) + cast(COALESCE(CAST(AC_MORATORIUM_PERIOD AS INTEGER),0)+COALESCE(cast(INSTTYPE as integer),0)as integer))
 < Cast('.$etdate.' AS DATE)
)XYZ
)ABC 
 

Union All 
    SELECT LNMASTER."AC_ACNOTYPE" , LNMASTER."AC_TYPE" , LNMASTER."BANKACNO" ,  
 COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) CLOSING_BALANCE 
          , COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) DUE_BALANCE ,
 COALESCE(CAST(LNMASTER."AC_INSTALLMENT" AS INTEGER),0) AC_INSTALLMENT, 0 INSTTYPE
FROM LNMASTER  

LEFT OUTER JOIN (SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.'as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
  
  Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.'AS DATE))))VWTMPZBALANCELIABLITY
        ON CAST(LNMASTER."BANKACNO" AS FLOAT)= VWTMPZBALANCELIABLITY."AC_NO" 

INNER JOIN SCHEMAST ON  LNMASTER."AC_TYPE" = SCHEMAST.id 
WHERE
CAST(LNMASTER."AC_EXPIRE_DATE" AS DATE) <= CAST('.$etdate.' AS DATE)
AND (LNMASTER."AC_OPDATE" IS NULL 
OR CAST(LNMASTER."AC_OPDATE" AS DATE) <= CAST('.$etdate.'AS DATE))
AND (LNMASTER."AC_CLOSEDT" IS NULL 
OR CAST(LNMASTER."AC_CLOSEDT"  AS DATE)> CAST('.$stdate.'AS DATE))

Union All 
 SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."BANKACNO", 
 COALESCE( VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) CLOSING_BALANCE 
, COALESCE( VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) DUE_BALANCE, 
 COALESCE(CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT),0) AC_INSTALLMENT, 0 INSTTYPE 
 FROM 
LNMASTER
LEFT OUTER JOIN (SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.'as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
  
  Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.'AS DATE))))VWTMPZBALANCELIABLITY 
ON LNMASTER."BANKACNO" = CAST(VWTMPZBALANCELIABLITY."AC_NO"  AS CHARACTER VARYING)
INNER JOIN RENEWALHISTORY ON LNMASTER."BANKACNO" = RENEWALHISTORY."AC_NO"
INNER JOIN SCHEMAST ON LNMASTER."AC_TYPE" = SCHEMAST.id

WHERE
CAST(RENEWALHISTORY."RENEWAL_DATE" AS DATE) > CAST('.$stdate.' AS DATE) 
AND CAST("OLD_EXPIRY_DATE" AS DATE) <= CAST('.$etdate.' AS DATE) 
AND (LNMASTER."AC_CLOSEDT" IS NULL 
OR CAST(LNMASTER."AC_CLOSEDT" AS DATE) > CAST('.$stdate.'AS DATE)) 


Union All 
    SELECT LNMASTER."AC_ACNOTYPE" , LNMASTER."AC_TYPE" , LNMASTER."BANKACNO"  ,
 COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) CLOSING_BALANCE 
, 0 DUE_BALANCE ,
 COALESCE(CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT),0) AC_INSTALLMENT, 0 INSTTYPE 
FROM LNMASTER 

LEFT OUTER JOIN(SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.'as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.'
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
  
  Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.'AS DATE))))VWTMPZBALANCELIABLITY
ON LNMASTER."BANKACNO"= CAST(VWTMPZBALANCELIABLITY."AC_NO"  AS CHARACTER VARYING)

INNER JOIN SCHEMAST ON LNMASTER."AC_TYPE" = SCHEMAST.id 
WHERE
CAST(LNMASTER."AC_EXPIRE_DATE" AS DATE) > CAST('.$stdate.' AS DATE)
AND LNMASTER."AC_ACNOTYPE" = '.$AC_ACNOTYPE.' 
AND (LNMASTER."AC_OPDATE" IS NULL 
  OR CAST(LNMASTER."AC_OPDATE" AS DATE) <= CAST('.$etdate.'AS DATE))
AND (LNMASTER."AC_CLOSEDT" IS NULL 
  OR  CAST(LNMASTER."AC_CLOSEDT"  AS DATE) > CAST('.$etdate.'AS DATE))
    ) FINALTABLE 
 WHERE ( DUE_BALANCE+ CLOSING_BALANCE ) > 0
 
UNION ALL
 


SELECT FINALTABLE.*  ,
 OVERDUEDATE(CAST("AC_TYPE" AS INTEGER) ,CAST( "BANKACNO" AS CHARACTER VARYING) ,
 CAST('.$etdate.'AS CHARACTER VARYING), CAST(COALESCE(DUE_BALANCE,0) AS CHARACTER VARYING), 
 CAST(COALESCE(AC_INSTALLMENT,0)AS CHARACTER VARYING)) OVERDUE_DATE  
FROM ( 
    SELECT "AC_ACNOTYPE" , "AC_TYPE" , "BANKACNO" ,
 COALESCE(CLOSING_BALANCE,0) CLOSING_BALANCE 
  , CASE LEFT(CAST(COALESCE(DUE_BALANCE,0)AS CHARACTER VARYING),1) 
 WHEN '.$hypen.' THEN '.$zero.' 
 WHEN '.$zero.' THEN '.$zero.' 
    ELSE 
      CASE LEFT(CAST((COALESCE(CLOSING_BALANCE,0) - COALESCE(DUE_BALANCE,0))AS CHARACTER VARYING),1)
      WHEN '.$hypen.' 
    THEN COALESCE(CLOSING_BALANCE,0)                   
    ELSE DUE_BALANCE  
    END 
 END DUE_BALANCE , 
 COALESCE(AC_INSTALLMENT,0) AC_INSTALLMENT, INSTTYPE 

FROM ( 
    SELECT "AC_ACNOTYPE" , "AC_TYPE" , "BANKACNO" ,
 COALESCE(CLOSING_BALANCE,0) CLOSING_BALANCE   
, COALESCE((( CASE LEFT(CAST(COALESCE(NO_OF_MONTHS ,0)AS CHARACTER VARYING),1)
      WHEN '.$hypen.' THEN '.$zero.' 
      WHEN '.$zero.' THEN '.$zero.'  
      ELSE ( ROUND((COALESCE(NO_OF_MONTHS,0) * AC_INSTALLMENT),2) )
      END + DEBIT_AMOUNT )- DEPOSIT_AMOUNT ),0) DUE_BALANCE ,
   AC_INSTALLMENT, INSTTYPE       
 FROM ( 
    SELECT "AC_ACNOTYPE" , "AC_TYPE" , "BANKACNO" 
,CASE INSTTYPE 
 WHEN 0  THEN 0  
 ELSE 
     (((extract( year FROM cast('.$etdate.' as date)) 
      - extract( year FROM (SELECT CAST(ASONDATE AS DATE) + COALESCE(AC_MORATORIUM_PERIOD ,0)) ))*12)
      + (extract(MONTH FROM cast('.$etdate.' as date ))
      - extract(MONTH FROM (SELECT CAST(ASONDATE AS DATE) + COALESCE(AC_MORATORIUM_PERIOD ,0)) ) ))
                      /INSTTYPE
 END NO_OF_MONTHS , AC_INSTALLMENT ,
   COALESCE(DEBIT_AMOUNT,0) DEBIT_AMOUNT , 
   COALESCE(DEPOSIT_AMOUNT,0) DEPOSIT_AMOUNT , CLOSING_BALANCE, INSTTYPE 
FROM ( 
SELECT  LNMASTER."AC_ACNOTYPE" , LNMASTER."AC_TYPE" , LNMASTER."BANKACNO" ,
 LNMASTER."AC_OPDATE", COALESCE(CAST("AC_INSTALLMENT" AS INTEGER),0) AC_INSTALLMENT ,
 ( COALESCE(CAST("AC_OP_TOTAL_DEPOSITAMT" AS INTEGER),0) 
+ COALESCE(LOANTRAN.TRAN_AMOUNT,0) + COALESCE(DAILYTRAN.DAILY_TRAN_AMOUNT,0)) DEPOSIT_AMOUNT 
, CASE  COALESCE(CAST(LNMASTER."AC_OP_BAL" as integer),0) 
 WHEN 0  
 THEN  
    ( COALESCE(LOANTRAN.DEPOSIT_AMOUNT,0) + COALESCE(DAILYTRAN.DAILY_DEPOSIT_AMOUNT,0))
   - COALESCE(cast(LNMASTER."AC_SANCTION_AMOUNT" as integer),0) 
   ELSE Case 
        LEFT(cast(COALESCE( COALESCE(cast(LNMASTER."AC_OP_BAL" as integer),0) 
         + COALESCE(LOANTRAN.DEPOSIT_AMOUNT,0) 
         + COALESCE(DAILYTRAN.DAILY_DEPOSIT_AMOUNT,0)       
         - COALESCE(cast(LNMASTER."AC_SANCTION_AMOUNT" as integer),0),0 ) 
          as character varying ),1) 
         When '.$hypen.' Then  0 
       Else (COALESCE(cast(LNMASTER."AC_OP_BAL" as integer),0) 
      + COALESCE(LOANTRAN.DEPOSIT_AMOUNT,0)+ 
      COALESCE(DAILYTRAN.DAILY_DEPOSIT_AMOUNT,0) 
         - COALESCE(cast(LNMASTER."AC_SANCTION_AMOUNT" as integer),0))
       End 
     END DEBIT_AMOUNT 
, CASE  cast(SCHEMAST."GRACE_PERIOD_APPLICABLE" as integer)
  WHEN 0  
  THEN  cast(LNMASTER."AC_OPDATE"  as date)
  ELSE ( select cast(lnmaster."AC_OPDATE" as date) + coalesce(cast(LNMASTER."AC_GRACE_PERIOD" as integer),0)) 
  END ASONDATE                       
, COALESCE(CASE  cast(SCHEMAST."MORATORIUM_APPLICABLE" as integer) 
      WHEN 0 THEN  0 
      ELSE cast(LNMASTER."AC_MORATORIUM_PERIOD"  as integer)
      END,0) AC_MORATORIUM_PERIOD 
, COALESCE(CASE "AC_REPAYMODE"
      WHEN '.$M.' THEN  1 
      WHEN '.$Q.' THEN  3  
      WHEN '.$H.' THEN  6 
      WHEN '.$Y.' THEN 12 
      ELSE 0 
      END,0) INSTTYPE 
, COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) CLOSING_BALANCE 
From LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , 
SUM(CASE "TRAN_DRCR" WHEN '.$C.' THEN cast("TRAN_AMOUNT" as float) ELSE 0 END) TRAN_AMOUNT                                   
,  SUM(COALESCE(CASE cast("IS_INTEREST_ENTRY" as integer)
        WHEN 0 
        THEN  CASE "TRAN_DRCR"  
              WHEN '.$D.' 
              THEN  cast("TRAN_AMOUNT" as float) ELSE 0 END 
            ELSE 0 END,0)) DEPOSIT_AMOUNT 
FROM LOANTRAN
WHERE cast("TRAN_DATE"  as date)<= cast('.$etdate.'as date) 
GROUP BY "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" 
) LOANTRAN 
ON LNMASTER."BANKACNO" = LOANTRAN."TRAN_ACNO"
 
LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , 
SUM(CASE "TRAN_DRCR" WHEN '.$C.' THEN cast("TRAN_AMOUNT" as float) ELSE 0 END) DAILY_TRAN_AMOUNT 
,  SUM(COALESCE(CASE "IS_INTEREST_ENTRY"  
       WHEN 0  
       THEN  CASE "TRAN_DRCR"  
             WHEN '.$D.' 
             THEN cast("TRAN_AMOUNT" as float) 
             ELSE 0 END
       ELSE 0 END,0)) DAILY_DEPOSIT_AMOUNT 
FROM DAILYTRAN 
WHERE cast("TRAN_DATE" as date) <= Cast('.$etdate.' as date)
   AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" 
) DAILYTRAN
ON LNMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"
 
LEFT OUTER JOIN(SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."BANKACNO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.'as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
  
  Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.'AS DATE)))
)VWTMPZBALANCELIABLITY ON LNMASTER."BANKACNO" = VWTMPZBALANCELIABLITY."BANKACNO"

INNER JOIN SCHEMAST ON LNMASTER."AC_TYPE" = SCHEMAST.id 

WHERE cast(LNMASTER."AC_EXPIRE_DATE" as date)>= Cast('.$stdate.'AS DATE)
 AND cast(SCHEMAST."S_DUE_LIST_ALLOW" as integer) = 0 
AND (LNMASTER."AC_OPDATE" IS NULL 
  OR cast(LNMASTER."AC_OPDATE" as date) <= cast('.$etdate.'as date))
AND (LNMASTER."AC_CLOSEDT" IS NULL 
  OR cast(LNMASTER."AC_CLOSEDT" as date) > cast('.$stdate.'as date))
) TMP 
WHERE 
((SELECT cast(ASONDATE as DATE) + cast(COALESCE(CAST(AC_MORATORIUM_PERIOD AS INTEGER),0)+COALESCE(cast(INSTTYPE as integer),0)as integer))
 < Cast('.$etdate.' AS DATE))
 )XYZ
)ABC 

UNION ALL  
SELECT LNMASTER."AC_ACNOTYPE" , LNMASTER."AC_TYPE" , LNMASTER."BANKACNO"  , 
 COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) CLOSING_BALANCE 
          , COALESCE(VWTMPZBALANCELIABLITY.CLOSING_BALANCE,0) DUE_BALANCE ,
 COALESCE(CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT),0) AC_INSTALLMENT,0 INSTTYPE 
FROM 
LNMASTER 

LEFT OUTER JOIN(SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.'as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
  
  Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.'AS DATE)))
)VWTMPZBALANCELIABLITY 
ON LNMASTER."BANKACNO"= CAST(VWTMPZBALANCELIABLITY."AC_NO" AS CHARACTER VARYING)

INNER JOIN  SCHEMAST ON LNMASTER."AC_TYPE" = SCHEMAST.id 

WHERE
CAST(LNMASTER."AC_EXPIRE_DATE" AS DATE)<= Cast('.$etdate.' as date)
AND (LNMASTER."AC_OPDATE" IS NULL
  OR CAST(LNMASTER."AC_OPDATE"  AS DATE)<=cast('.$etdate.'as date))
AND (LNMASTER."AC_CLOSEDT" IS NULL
  OR CAST(LNMASTER."AC_CLOSEDT" AS DATE) > cast('.$stdate.'as date))
    ) FINALTABLE
WHERE ( DUE_BALANCE + CLOSING_BALANCE ) > 0 ) FINALOVERDUE 	
)VWTMPZLIBOVERDUE 
ON MAST.BANKACNO = CAST(VWTMPZLIBOVERDUE."BANKACNO" AS FLOAT)
 
 
LEFT OUTER JOIN(
SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."BANKACNO", 
LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL"  AS FLOAT) 
 ELSE (-1) * CAST(LNMASTER."AC_OP_BAL"  AS FLOAT)END,0) + COALESCE(LOANTRAN.TRAN_AMOUNT,0) 
  + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE
,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
      THEN LNMASTER."AC_RECBLEINT_OP" 
 ELSE (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) +
COALESCE(CAST(LOANTRAN.RECPAY_INT_AMOUNT AS FLOAT),0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,0) 
+ COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' 
THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
COALESCE(CAST(LOANTRAN.OTHER10_AMOUNT AS FLOAT),0) + COALESCE(CAST(DAILYTRAN.DAILY_OTHER10_AMOUNT AS FLOAT),0)) RECPAY_INT_AMOUNT 
FROM LNMASTER

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT" as float)
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) TRAN_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "RECPAY_INT_AMOUNT" 
        ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) RECPAY_INT_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  "OTHER10_AMOUNT" 
        ELSE (-1) * "OTHER10_AMOUNT"  END),0) OTHER10_AMOUNT 
FROM LOANTRAN 
WHERE cast("TRAN_DATE" as date) <= cast('.$etdate.'as date)
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) LOANTRAN
ON LNMASTER."BANKACNO"=  LOANTRAN."TRAN_ACNO"

LEFT OUTER JOIN( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR",
COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("TRAN_AMOUNT"  as float) 
 ELSE (-1) * cast("TRAN_AMOUNT" as float) END),0) DAILY_AMOUNT 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  cast("RECPAY_INT_AMOUNT"  as float) 
ELSE (-1) * cast("RECPAY_INT_AMOUNT" as float) END),0) DAILY_RECPAY_INT_AMOUNT  
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT"  AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT"  AS FLOAT) END),0) DAILY_OTHER10_AMOUNT  
FROM DAILYTRAN
WHERE cast("TRAN_DATE" AS DATE) <= CAST('.$etdate.'AS DATE)
AND "TRAN_STATUS" = '.$TRAN_STATUS.' 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO","TRAN_DRCR"
) DAILYTRAN
ON LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO"
    
Where ((LNMASTER."AC_OPDATE" IS NULL) 
        OR (CAST(LNMASTER."AC_OPDATE"  AS DATE)<= CAST('.$etdate.'AS DATE)))
           AND ((LNMASTER."AC_CLOSEDT" IS NULL) 
        OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE)> CAST('.$stdate.'AS DATE)))
)VWTMPZBALANCELIABLITY
ON MAST.BANKACNO = CAST(VWTMPZBALANCELIABLITY."BANKACNO" AS FLOAT)  
 
WHERE SHMASTER."AC_TYPE" = '.$AC_TYPE.'
AND CAST(SHMASTER."BANKACNO" AS FLOAT)=101101901100254
) TMP1 )
';


//echo $query;
$sql =pg_query($conn,$query);
$i = 0;


// if (pg_num_rows($sql) == 0) {
//    include 'errandmsg.html';
// }else

    while ($row =pg_fetch_assoc($sql)) {

    //echo $row;

    $tmp = [
            
            'sanctionamt' => $row['sanctionamt'],
            'AC_NAME' => $row['AC_NAME'],
            'BANKACNO' => $row['BANKACNO'],
            'deposit_amount' => $row['deposit_amount'],
            'AC_OPDATE' => $row['AC_OPDATE'],
            'AC_EXPIRE_DATE' => $row['AC_EXPIRE_DATE'],
            'closing_balance' => $row['closing_balance'],
            'due_installment' => $row['due_installment'],
            'AC_EXPDT' => $row['AC_EXPDT'],
            'brach_name' => $row['brach_name'],

            'branch' => $branch,
            'date' => $date,
            'branchName' => $branchName,

            // 'revoke' => $revoke,
            'bankName' => $bankName,

        ];
        $data[$i] = $tmp;
        $i++;
    
        // echo '<pre>';
      //print_r($tmp);
        // echo '</pre>';
    
}
ob_end_clean();

//print_r($data);
// echo $query;
 $config = ['driver' => 'array', 'data' => $data];
$repandt = new PHPJasperXML();
$repandt->load_xml_file($filename)    
    ->setDataSource($config)
    ->export('Pdf');
    
    
// //}
?>
