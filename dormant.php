<?php

ob_start(); 
include "main.php";
require_once('dbconnect.php');

// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
// error_reporting(E_ALL);
use simitsdk\phpjasperxml\PHPJasperXML;

$filename = __DIR__.'/dormant.jrxml';

$data = [];
$faker = Faker\Factory::create('en_US');



$Bankname = $_GET['Bankname'];
$Branch = $_GET['Branch'];
$sdate = $_GET['sdate'];
$edate = $_GET['edate'];
$ACNOTYPE=$_GET['ACNOTYPE'];
$AC_TYPE=$_GET['AC_TYPE'];
$trandr="'D'";
$transtatus="'1'";
$CHG="'CHG'";
$NTG="'NTG'";
$BRANCH_CODE  = $_GET['BRANCH_CODE'];




$Branch1 = str_replace("'", "", $Branch);
$Bankname1 = str_replace("'", "", $Bankname);
$sdate1 = str_replace("'", "", $sdate);
$edate1 = str_replace("'", "", $edate);







$query='SELECT DPMASTER."AC_ACNOTYPE",
	DPMASTER."AC_TYPE",
	DPMASTER."AC_NO",
	DPMASTER."BANKACNO",
	DPMASTER."AC_OPDATE" TRAN_DATE,
	DPMASTER."AC_NAME",
	DPMASTER."AC_OPDATE",
	VWTMPZBALANCEALL.CLOSING_BALANCE,
	SCHEMAST."S_APPL",
	SCHEMAST."S_NAME"
FROM DPMASTER
LEFT OUTER JOIN
	(SELECT "AC_ACNOTYPE",
			"AC_TYPE",
			"AC_NO",
	        "BANKACNO",
			"AC_OPDATE",
			"AC_CLOSEDT" ,
			(COALESCE(CASE
WHEN "AC_OP_CD" = '.$trandr.' THEN CAST("AC_OP_BAL" AS float)
ELSE (-1) * CAST("AC_OP_BAL" AS float)
END,0) + COALESCE(DEPOTRAN.TRAN_AMOUNT,
	0) + COALESCE(DAILYTRAN.DAILY_AMOUNT,
	0)) CLOSING_BALANCE ,
			(COALESCE(CASE	WHEN DPMASTER."AC_OP_CD" = '.$trandr.' THEN CAST(DPMASTER."AC_PAYBLEINT_OP" AS float)
ELSE (-1) * CAST(DPMASTER."AC_PAYBLEINT_OP" AS float)END,
	0) + COALESCE(DEPOTRAN.RECPAY_INT_AMOUNT,
	0) + COALESCE(DAILYTRAN.RECPAY_INT_AMOUNT,
0)) RECPAY_INT_AMOUNT
		FROM DPMASTER
		LEFT OUTER JOIN
			(SELECT "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO",
					COALESCE(SUM(CASE
WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float)
ELSE (-1) * CAST("TRAN_AMOUNT" AS float)END),
						0) TRAN_AMOUNT,	SUM(CASE
WHEN "TRAN_DRCR" ='.$trandr.' THEN "RECPAY_INT_AMOUNT"
ELSE (-1) * "RECPAY_INT_AMOUNT"
END) RECPAY_INT_AMOUNT
				FROM DEPOTRAN
				WHERE CAST("TRAN_DATE" AS date) <= cast('.$sdate.' As date)
			 AND "BRANCH_CODE"='.$BRANCH_CODE.'
				GROUP BY "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO") DEPOTRAN ON (DPMASTER."AC_ACNOTYPE" = DEPOTRAN."TRAN_ACNOTYPE"
AND CAST(DPMASTER."AC_TYPE" AS CHARACTER varying) = DEPOTRAN."TRAN_ACTYPE"	
 AND DPMASTER."BANKACNO"  = DEPOTRAN."TRAN_ACNO" 
AND DPMASTER."BRANCH_CODE"='.$BRANCH_CODE.' AND DPMASTER."status"='.$transtatus.' AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL )
		LEFT OUTER JOIN
			(SELECT "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO",
					COALESCE(SUM(CASE	WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float)
ELSE (-1) * CAST("TRAN_AMOUNT" AS float)	END),
						0) DAILY_AMOUNT,
			 SUM(CASE WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("RECPAY_INT_AMOUNT" AS float)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS float)
END) RECPAY_INT_AMOUNT
				FROM DAILYTRAN
				WHERE CAST("TRAN_DATE" AS date) <= cast('.$sdate.' As date)
					AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE"='.$BRANCH_CODE.'
				GROUP BY "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO") DAILYTRAN ON (DPMASTER."AC_ACNOTYPE" = DAILYTRAN."TRAN_ACNOTYPE"	
											   AND CAST(DPMASTER."AC_TYPE" AS CHARACTER varying) = DAILYTRAN."TRAN_ACTYPE"
AND DPMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO")
		WHERE ((DPMASTER."AC_OPDATE" IS NULL)
	OR (CAST(DPMASTER."AC_OPDATE" AS date) <= cast('.$sdate.' As date)))
	 AND DPMASTER."BRANCH_CODE"='.$BRANCH_CODE.' AND DPMASTER."status"='.$transtatus.' AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL
			AND ((DPMASTER."AC_CLOSEDT" IS NULL)
								OR (CAST(DPMASTER."AC_CLOSEDT" AS date) > cast('.$sdate.' As date))) )VWTMPZBALANCEALL ON (DPMASTER."AC_ACNOTYPE" = VWTMPZBALANCEALL."AC_ACNOTYPE"
AND DPMASTER."AC_TYPE" = VWTMPZBALANCEALL."AC_TYPE"
AND DPMASTER."BANKACNO" = VWTMPZBALANCEALL."BANKACNO")
LEFT JOIN schemast ON dpmaster."AC_TYPE"=SCHEMAST.ID
WHERE CAST(DPMASTER."IS_DORMANT" AS INTEGER) <> 0
	AND (DPMASTER."AC_CLOSEDT" IS NULL)
	AND DPMASTER."AC_ACNOTYPE" = '.$ACNOTYPE.' 
	AND DPMASTER."AC_TYPE" = '.$AC_TYPE.' 
	AND DPMASTER."BRANCH_CODE"='.$BRANCH_CODE.'
UNION
SELECT TMP1."TRAN_ACNOTYPE" AC_ACNOTYPE,
	TMP1.TRAN_ACTYPE AC_TYPE,
	DPMASTER."AC_NO",
	TMP1.TRAN_ACNO ,
	TMP1.TRAN_DATE,
	DPMASTER."AC_NAME",
	DPMASTER."AC_OPDATE",	
	VWTMPZBALANCEALL.CLOSING_BALANCE,
	SCHEMAST."S_APPL",
	SCHEMAST."S_NAME"
FROM DPMASTER,
	(SELECT TMP."TRAN_ACNOTYPE",
			TMP.TRAN_ACTYPE,
	 TMP."AC_NO",
			TMP.TRAN_ACNO,
			MAX(TMP.TRAN_DATE) TRAN_DATE
		FROM
			(SELECT "AC_ACNOTYPE" "TRAN_ACNOTYPE",
					"AC_TYPE" TRAN_ACTYPE,
			 "AC_NO",
					"BANKACNO" TRAN_ACNO,
					CASE
									WHEN "AC_ACTDATE" IS NULL THEN "AC_OPDATE"
									ELSE "AC_ACTDATE"
					END TRAN_DATE
				FROM DPMASTER
				WHERE "AC_ACNOTYPE" = '.$ACNOTYPE.' 
					AND "AC_TYPE" = '.$AC_TYPE.' 
			 AND DPMASTER."BRANCH_CODE"= '.$BRANCH_CODE.' AND DPMASTER."status"=1 AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL 
					AND CASE WHEN "AC_ACTDATE" IS NULL THEN CAST("AC_OPDATE" AS DATE)
ELSE CAST("AC_ACTDATE" AS DATE)		END <= cast('.$edate.' As date)
				UNION ALL
			 SELECT "TRAN_ACNOTYPE",
					CAST("TRAN_ACTYPE" AS INTEGER),
			 DPMASTER."AC_NO",
					"TRAN_ACNO" ,
					"TRAN_DATE"
				FROM DEPOTRAN LEFT JOIN DPMASTER ON DPMASTER."BANKACNO"=DEPOTRAN."TRAN_ACNO"
				WHERE "TRAN_ACNOTYPE" = '.$ACNOTYPE.' 
					AND "TRAN_ACTYPE" = '.$AC_TYPE.' 
					AND ("TRAN_ENTRY_TYPE" NOT IN ('.$CHG.' ,'.$NTG.')
										OR "TRAN_ENTRY_TYPE" IS NULL)
					AND ("IS_INTEREST_ENTRY" = 0
										OR "IS_INTEREST_ENTRY" IS NULL)
					AND CAST("TRAN_DATE" AS DATE) <= cast('.$edate.' As date)
			 AND DEPOTRAN."BRANCH_CODE"='.$BRANCH_CODE.'
				UNION ALL SELECT "TRAN_ACNOTYPE",
					CAST("TRAN_ACTYPE" AS INTEGER),
			 DPMASTER."AC_NO",
					"TRAN_ACNO",
					"TRAN_DATE"
				FROM DAILYTRAN LEFT JOIN DPMASTER ON DPMASTER."BANKACNO"=DAILYTRAN."TRAN_ACNO"
				WHERE "TRAN_STATUS" = '.$transtatus.'
					AND "TRAN_ACNOTYPE" = '.$ACNOTYPE.' 
					AND "TRAN_ACTYPE" = '.$AC_TYPE.' 
					AND ("TRAN_ENTRY_TYPE" NOT IN ('.$CHG.' ,'.$NTG.')
										OR "TRAN_ENTRY_TYPE" IS NULL)
					AND ("IS_INTEREST_ENTRY" = 0
										OR "IS_INTEREST_ENTRY" IS NULL)
					AND CAST("TRAN_DATE" AS DATE) <= cast('.$edate.' As date) 
			AND DAILYTRAN."BRANCH_CODE"='.$BRANCH_CODE.') TMP
		GROUP BY TMP."TRAN_ACNOTYPE",
			TMP.TRAN_ACTYPE,
			TMP.TRAN_ACNO,
	TMP."AC_NO") TMP1
LEFT OUTER JOIN
	(SELECT "AC_ACNOTYPE",
			"AC_TYPE",
			"AC_NO",
	 "BANKACNO" AS TRAN_ACNO,
			"AC_OPDATE",
			"AC_CLOSEDT" ,
			(COALESCE(CASE
WHEN "AC_OP_CD" = '.$trandr.' THEN CAST("AC_OP_BAL" AS float)
	ELSE (-1) * CAST("AC_OP_BAL" AS float)	END,
0) + COALESCE(DEPOTRAN.TRAN_AMOUNT,
0) + COALESCE(DAILYTRAN.DAILY_AMOUNT,0)) CLOSING_BALANCE ,
(COALESCE(CASE	WHEN DPMASTER."AC_OP_CD" = '.$trandr.' THEN CAST(DPMASTER."AC_PAYBLEINT_OP" AS float)
ELSE (-1) * CAST(DPMASTER."AC_PAYBLEINT_OP" AS float)	END,
					0) + COALESCE(DEPOTRAN.RECPAY_INT_AMOUNT,
	0) + COALESCE(DAILYTRAN.RECPAY_INT_AMOUNT,
	0)) RECPAY_INT_AMOUNT
		FROM DPMASTER
		LEFT OUTER JOIN
			(SELECT "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO",
					COALESCE(SUM(CASE
WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float)
ELSE (-1) * CAST("TRAN_AMOUNT" AS float)END),0) TRAN_AMOUNT,
					SUM(CASE WHEN "TRAN_DRCR" = '.$trandr.'  THEN "RECPAY_INT_AMOUNT"
ELSE (-1) * "RECPAY_INT_AMOUNT" END) RECPAY_INT_AMOUNT
				FROM DEPOTRAN
				WHERE CAST("TRAN_DATE" AS date) <= cast('.$sdate.' As date)
			 AND "BRANCH_CODE"='.$BRANCH_CODE.'
				GROUP BY "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO") DEPOTRAN ON (DPMASTER."AC_ACNOTYPE" = DEPOTRAN."TRAN_ACNOTYPE"
AND CAST(DPMASTER."AC_TYPE" AS CHARACTER varying) = DEPOTRAN."TRAN_ACTYPE"
AND DPMASTER."BANKACNO" = DEPOTRAN."TRAN_ACNO" 
AND DPMASTER."BRANCH_CODE"='.$BRANCH_CODE.' AND DPMASTER."status"='.$transtatus.'  AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL)
		LEFT OUTER JOIN
			(SELECT "TRAN_ACNOTYPE",
					"TRAN_ACTYPE",
					"TRAN_ACNO",
					COALESCE(SUM(CASE
WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("TRAN_AMOUNT" AS float)
ELSE (-1) * CAST("TRAN_AMOUNT" AS float)END),
						0) DAILY_AMOUNT,
					SUM(CASE
WHEN "TRAN_DRCR" = '.$trandr.' THEN CAST("RECPAY_INT_AMOUNT" AS float)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS float)
	END) RECPAY_INT_AMOUNT
				FROM DAILYTRAN
				WHERE CAST("TRAN_DATE" AS date) <= cast('.$sdate.' As date)
					AND "TRAN_STATUS" = '.$transtatus.' AND "BRANCH_CODE"=1
				GROUP BY "TRAN_ACNOTYPE", 
					"TRAN_ACTYPE",
					"TRAN_ACNO") DAILYTRAN ON (DPMASTER."AC_ACNOTYPE" = DAILYTRAN."TRAN_ACNOTYPE"
AND CAST(DPMASTER."AC_TYPE" AS CHARACTER varying) = DAILYTRAN."TRAN_ACTYPE"
AND CAST(DPMASTER."BANKACNO" AS CHARACTER varying) = DAILYTRAN."TRAN_ACNO")
		WHERE ((DPMASTER."AC_OPDATE" IS NULL)
									OR (CAST(DPMASTER."AC_OPDATE" AS date) <= cast('.$sdate.' As date)))
	 AND DPMASTER."BRANCH_CODE"=1 AND DPMASTER."status"='.$transtatus.'  AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL
			AND ((DPMASTER."AC_CLOSEDT" IS NULL)
								OR (CAST(DPMASTER."AC_CLOSEDT" AS date) > cast('.$sdate.' As date))) 
	)VWTMPZBALANCEALL ON (TMP1."TRAN_ACNOTYPE" = VWTMPZBALANCEALL."AC_ACNOTYPE"
AND TMP1.TRAN_ACTYPE = VWTMPZBALANCEALL."AC_TYPE"
AND TMP1.TRAN_ACNO = VWTMPZBALANCEALL.TRAN_ACNO)
LEFT JOIN schemast ON TMP1.TRAN_ACTYPE=SCHEMAST.ID
WHERE TMP1."TRAN_ACNOTYPE" = DPMASTER."AC_ACNOTYPE"
	AND TMP1.TRAN_ACTYPE = DPMASTER."AC_TYPE"
	AND TMP1.TRAN_ACNO = DPMASTER."BANKACNO"
	AND CAST(TMP1.TRAN_DATE AS DATE) <= cast('.$edate.' As date)
	AND (DPMASTER."AC_CLOSEDT" IS NULL);';

// echo $query;

$sql =  pg_query($conn,$query);
$GRAND_TOTAL1 = 0;
$i = 0;
while($row = pg_fetch_assoc($sql)){
      $GRAND_TOTAL1 = $GRAND_TOTAL1 + $row["closing_balance"];
    $tmp=[
      'AC_NO' => $row['AC_NO'],
        'AC_OPDATE' => $row['AC_OPDATE'],
        'tran_date' => $row['tran_date'],
        'closing_balance' =>sprintf("%.2f", (abs($row['closing_balance']+0.0))),
        'AC_NAME' => $row['AC_NAME'],
        'ACNOTYPE' => $ACNOTYPE,
        'AC_TYPE' => $AC_TYPE,
        'Branch' => $Branch1,
        'sdate' => $sdate1,
        'edate' => $edate1,
        'Bankname' => $Bankname1,
        "total" => sprintf("%.2f", (abs($GRAND_TOTAL1+0.0))),
        'scheme' => $row["S_APPL"].' '. $row['S_NAME'],
        
       
    ];    
    $data[$i]=$tmp;
    $i++;   
}
// for clean previous execution
ob_end_clean();
// 
$config = ['driver'=>'array','data'=>$data];
// for pdf conversion of report
$report = new PHPJasperXML();
$report->load_xml_file($filename)    
    ->setDataSource($config)
    ->export('Pdf');
    
?>    