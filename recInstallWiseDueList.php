<?php
ob_start(); 
include "main.php";
require_once('dbconnect.php');

// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
// error_reporting(E_ALL);
use simitsdk\phpjasperxml\PHPJasperXML;


$filename = __DIR__.'/recinstallwiseduelist.jrxml';

$data = [];
$faker = Faker\Factory::create('en_US');




// variables

// $scheme = $_GET['scheme']; 
$date = $_GET['date'];
$bankName = $_GET['BANK_NAME'];
 $branch = $_GET['branch_name'];
 $startingcode = $_GET['startCode'];
 $endingcode = $_GET['endCode'];
 $acType = $_GET['ac_type'];
 $branchCode = $_GET['BRANCH_CODE'];
$status="'1'";
$c="'CC'";
// $date="'07/02/2024'";
$d_format="'DD/MM/YYYY'";
$D="'D'";
// $date="'30/09/2023'";
// $a="1";
$dueBalance="'DUEBAL'";
$LN="'LN'";
$CC="'CC'";
$DS="'DS'";
$space = "' '";
$P="'P'";

// echo $date;
// echo $branchname;
// echo $bankName;


//string replacements
$bankName1 = str_replace("'", "", $bankName);
// $branchname1 = str_replace("'", "", $branchname);
$Date1 = str_replace("'", "", $date);


//get data from table
if($branchCode  == 0){
$query ='SELECT TMP.*   , FLOOR(CASE TMP."AC_ACNOTYPE"  WHEN '.$c.' THEN  
extract(year from age(TO_DATE('.$date.','.$d_format.'), CASE CAST(TMP."AC_EXPIRE_DATE" AS DATE) WHEN Null THEN TO_DATE('.$date.','.$d_format.') ELSE CAST(TMP."AC_EXPIRE_DATE" AS DATE) END)) * 12 
+ extract(month from age(TO_DATE('.$date.','.$d_format.'), CASE CAST(TMP."AC_EXPIRE_DATE" AS DATE) WHEN Null THEN TO_DATE('.$date.','.$d_format.') ELSE CAST(TMP."AC_EXPIRE_DATE" AS DATE) END))
           ELSE CASE COALESCE(TMP."AC_INSTALLMENT",0)  WHEN 0  THEN  0  
           ELSE (COALESCE(TMP."DUE_BALANCE",0)/ COALESCE(TMP."AC_INSTALLMENT",0)) END END) NO_OF_INSTALLMENTS 
From 
( SELECT 0 "CURRENT_INT", LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO" , LNMASTER."AC_NAME" 
, CUSTOMERADDRESS."AC_HONO", CUSTOMERADDRESS."AC_WARD", CUSTOMERADDRESS."AC_ADDR" ,CUSTOMERADDRESS."AC_GALLI", CUSTOMERADDRESS."AC_AREA", CUSTOMERADDRESS."AC_AREA"
, LNMASTER."AC_OPDATE" , LNMASTER."AC_SANCTION_AMOUNT" , LNMASTER."AC_EXPIRE_DATE" , LNMASTER."AC_REPAYMODE" , LNMASTER."AC_INSTALLMENT" , LNMASTER."AC_RECOMMEND_BY", DIRECTORMASTER."NAME" "DIRECTOR_NAME" 
, CASE CAST(SCHEMAST."MORATORIUM_APPLICABLE" AS INTEGER)  WHEN 0  THEN  0  ELSE LNMASTER."AC_MORATORIUM_PERIOD" END "AC_MORATORIUM_PERIOD" , 
CASE CAST(SCHEMAST."GRACE_PERIOD_APPLICABLE" AS INTEGER)  WHEN 0  THEN  0  ELSE LNMASTER."AC_GRACE_PERIOD" END "AC_GRACE_PERIOD" 
, ( COALESCE(CASE  LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE (-1)* LNMASTER."AC_RECBLEINT_OP" END,0) + COALESCE(LOANTRAN."RECPAY_INT_AMOUNT",0) + COALESCE(DAILYTRAN."DAILY_RECPAY_INT_AMOUNT",0)) "RECPAY_INT_AMOUNT"  
, ( COALESCE(CASE  LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEODUEINT_OP" ELSE (-1)* LNMASTER."AC_RECBLEODUEINT_OP" END,0) + COALESCE(LOANTRAN."OTHER10_AMOUNT",0) + COALESCE(DAILYTRAN."DAILY_OTHER10_AMOUNT",0)) "OTHER10_AMOUNT" 
, ( COALESCE(LOANTRAN."OTHER_AMOUNT",0) + COALESCE(DAILYTRAN."DAILY_OTHER_AMOUNT",0)) "OTHER_AMOUNT",  
SCHEMAST."S_NAME" , SCHEMAST."S_SHNAME"  , 
COALESCE(VWTMPZBALANCEOD."CLOSING_BALANCE",0) "LEDGER_BALANCE" , COALESCE(VWTMPZLNOVERDUE."DUEBALANCE",0) "DUE_BALANCE" , 
VWTMPZLNOVERDUE."OVERDUEDATE" "OVERDUE_DATE",VWTMPZLNOVERDUE."DUEINSTALLMENT",VWTMPZLNOVERDUE."BRANCH_CODE"
From CUSTOMERADDRESS, 
  (
  SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."BANKACNO",LNMASTER."AC_NO", LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
, (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL" AS FLOAT)  ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT) END,0) 
+ COALESCE(CAST(LOANTRAN."TRAN_AMOUNT" AS FLOAT),0) + COALESCE(CAST(DAILYTRAN."DAILY_AMOUNT" AS FLOAT),0)) "CLOSING_BALANCE"
            ,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE (-1) * CAST(LNMASTER."AC_RECBLEINT_OP" AS FLOAT) END,0) 
                + COALESCE(CAST(LOANTRAN."RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE(CAST(DAILYTRAN."DAILY_RECPAY_INT_AMOUNT" AS FLOAT),0) 
                  + COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) 
                + COALESCE(CAST(LOANTRAN."OTHER10_AMOUNT" AS FLOAT),0) + COALESCE(CAST(DAILYTRAN."DAILY_OTHER10_AMOUNT" AS FLOAT),0)) "RECPAY_INT_AMOUNT" 
FROM LNMASTER LEFT OUTER JOIN
      ( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "TRAN_AMOUNT" 
           , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "RECPAY_INT_AMOUNT" 
           , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("OTHER10_AMOUNT" AS FLOAT)  END),0) "OTHER10_AMOUNT"  
       FROM LOANTRAN WHERE CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.', '.$d_format.')
            GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO" ) LOANTRAN 
            ON LNMASTER."AC_TYPE"  = LOANTRAN."TRAN_ACTYPE" AND LNMASTER."BANKACNO" =  LOANTRAN."TRAN_ACNO" LEFT OUTER JOIN
      ( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "DAILY_AMOUNT" 
            , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "DAILY_RECPAY_INT_AMOUNT"  
            , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("OTHER10_AMOUNT" AS FLOAT) END),0) "DAILY_OTHER10_AMOUNT"  
            FROM DAILYTRAN WHERE CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.', '.$d_format.')
            AND "TRAN_STATUS" = '.$status.' GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"
      ) DAILYTRAN ON LNMASTER."AC_TYPE"  = DAILYTRAN."TRAN_ACTYPE" AND LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO" Where
       ((CAST(LNMASTER."AC_OPDATE" AS DATE) IS NULL) OR (CAST(LNMASTER."AC_OPDATE" AS DATE) <= To_DATE('.$date.','.$d_format.')))
       AND ((CAST(LNMASTER."AC_CLOSEDT" AS DATE) IS NULL) OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE) > To_DATE('.$date.','.$d_format.')))
) VWTMPZBALANCEOD,
(
SELECT SCHEMAST."S_APPL",SCHEMAST."S_APPL" || '.$space. ' || SCHEMAST."S_NAME" "SCHEME", LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", LNMASTER."AC_NAME",  LNMASTER."BANKACNO", LNMASTER."AC_OPDATE", LNMASTER."idmasterID",
LNMASTER."AC_CLOSEDT",  DIRECTORMASTER.ID ||'.$space. ' || DIRECTORMASTER."NAME" "DIRECTORMASTER", "AC_RECOMMEND_BY" "DIRECTOR",
AUTHORITYMASTER.ID || '.$space. ' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER", "AC_AUTHORITY" "AUTHORITY",
RECOVERYCLEARKMASTER.ID || '.$space. ' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER", "AC_RECOVERY_CLERK",
OWNBRANCHMASTER.ID || '.$space. ' || OWNBRANCHMASTER."NAME" "BRANCH",LNMASTER."BRANCH_CODE",
CUSTOMERADDRESS."AC_CTCODE" "CITY", CITYMASTER."CITY_NAME" "CITYNAME", CUSTOMERADDRESS."AC_ADDR" || '.$space. ' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",
LNMASTER."AC_MORATORIUM_PERIOD",LNMASTER."AC_SANCTION_AMOUNT", LNMASTER."AC_GRACE_PERIOD", LNMASTER."AC_REPAYMODE", IDMASTER."AC_MOBILENO",
   (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL" AS FLOAT)  ELSE 
              (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT) END,0) +
     COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0) )
     "CLOSING_BALANCE"
   ,(COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE
              (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) + 
     COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0)
   + COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) ELSE 
              (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
     COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),0) ) "RECPAY_INT_AMOUNT",
LNMASTER."AC_INSTALLMENT",OIRINTBALANCE(SCHEMAST."S_APPL",LNMASTER."BANKACNO",'.$date.',0) "OVERDUEINTEREST",
(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT)/CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) ELSE 0 END ) "TOTALINSTALLMENTS",
(case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then ceil(DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0)/
 CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT)) ELSE 0 END )"DUEINSTALLMENT",
 (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then ceil((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT)-
 DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0)
 )/CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))ELSE 0 END ) "PAIDINSTALLMENTS",
DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0) "DUEBALANCE",
"AC_EXPIRE_DATE", 
overduedate(CAST(SCHEMAST."S_APPL" AS INTEGER),LNMASTER."BANKACNO", CAST('.$date.' AS CHARACTER VARYING) ,
CAST(DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0) AS CHARACTER VARYING), 
CAST(LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING)) "OVERDUEDATE"
   FROM LNMASTER LEFT JOIN SCHEMAST ON SCHEMAST.ID= LNMASTER."AC_TYPE"
   LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID=CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
   LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID=CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
   LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID=LNMASTER."AC_AUTHORITY" 
   LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID=LNMASTER."BRANCH_CODE"
   LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID"=LNMASTER."idmasterID" 
   AND CUSTOMERADDRESS."AC_ADDTYPE" ='.$P.'
   LEFT JOIN CITYMASTER ON CITYMASTER.ID= CUSTOMERADDRESS."AC_CTCODE"
   LEFT JOIN IDMASTER ON IDMASTER.ID=LNMASTER."idmasterID",
         ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , 
COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT" FROM
(SELECT * FROM (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", 
          COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "TRAN_AMOUNT" 
         , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "RECPAY_INT_AMOUNT"
         , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT) END),0) "OTHER10_AMOUNT", 
           0 "DAILY_AMOUNT",0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
           FROM LOANTRAN 
   WHERE cast("TRAN_DATE" as date) <= TO_DATE('.$date.', '.$d_format.') AND   "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
   GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"		
   UNION ALL		
   SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "DAILY_AMOUNT" 
   , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "DAILY_RECPAY_INT_AMOUNT"  
   , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST ("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)  END),0) "DAILY_OTHER10_AMOUNT"  ,
   0 "TRAN_AMOUNT", 0  "RECPAY_INT_AMOUNT", 0 "OTHER10_AMOUNT"  FROM DAILYTRAN WHERE cast("TRAN_DATE" as date) <= TO_DATE('.$date.', '.$d_format.')
   AND "TRAN_STATUS" = '.$status.'  AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
   GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") RS
   ORDER BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO")AMOUNT
       GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"
) TRANTABLE
   Where LNMASTER."AC_ACNOTYPE"  = TRANTABLE."TRAN_ACNOTYPE"
    AND LNMASTER."AC_TYPE"  = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
    AND LNMASTER."BANKACNO"=  TRANTABLE."TRAN_ACNO"
    AND LNMASTER."status"=1 AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
    ORDER BY SCHEMAST."S_APPL", LNMASTER."BANKACNO" 
) VWTMPZLNOVERDUE, LNMASTER	   
LEFT OUTER JOIN SCHEMAST ON LNMASTER."AC_TYPE" = SCHEMAST.ID 
LEFT OUTER JOIN DIRECTORMASTER ON LNMASTER."AC_RECOMMEND_BY"=DIRECTORMASTER."CODE"   
LEFT OUTER JOIN ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  
   THEN  "RECPAY_INT_AMOUNT"  ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) "RECPAY_INT_AMOUNT" 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  "OTHER10_AMOUNT"  ELSE (-1) * "OTHER10_AMOUNT" END),0) "OTHER10_AMOUNT" 
, (COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN  COALESCE("PENAL_INTEREST",0)  ELSE (-1) * COALESCE("PENAL_INTEREST",0) END),0) 
   + COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN  COALESCE("REC_PENAL_INT_AMOUNT",0)  ELSE (-1) * COALESCE("REC_PENAL_INT_AMOUNT",0) END),0)) PENAL_INTEREST 
, COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN (COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) 
+ COALESCE("OTHER4_AMOUNT",0) + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) + COALESCE("OTHER7_AMOUNT",0) 
+ COALESCE("OTHER8_AMOUNT",0) + COALESCE("OTHER9_AMOUNT",0) )
     ELSE (-1) * ( COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) + COALESCE("OTHER4_AMOUNT",0) 
   + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) + COALESCE("OTHER7_AMOUNT",0) + COALESCE("OTHER8_AMOUNT",0) 
                + COALESCE("OTHER9_AMOUNT",0) )
   END),0) "OTHER_AMOUNT" FROM LOANTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT),0) <> 0  And "TRAN_ACTYPE" = 7 
              And CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.','.$d_format.') 
GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") LOANTRAN ON LNMASTER."AC_TYPE" = LOANTRAN."TRAN_ACTYPE" 
  AND LNMASTER."BANKACNO" = LOANTRAN."TRAN_ACNO" 
 LEFT OUTER JOIN ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  "RECPAY_INT_AMOUNT"  ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) "DAILY_RECPAY_INT_AMOUNT" 
, COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  "OTHER10_AMOUNT"  ELSE (-1) * "OTHER10_AMOUNT" END),0) "DAILY_OTHER10_AMOUNT" 
, (COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  COALESCE("PENAL_INT_AMOUNT",0)  ELSE (-1) * COALESCE("PENAL_INT_AMOUNT",0) END),0) 
   + COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  COALESCE("REC_PENAL_INT_AMOUNT",0)  ELSE (-1) * COALESCE("REC_PENAL_INT_AMOUNT",0) 
END),0)) "PENAL_INT_AMOUNT" 
, COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN (COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) 
                                               + COALESCE("OTHER4_AMOUNT",0) + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) 
                                               + COALESCE("OTHER7_AMOUNT",0) + COALESCE("OTHER8_AMOUNT",0) + COALESCE("OTHER9_AMOUNT",0) )
ELSE (-1) * ( COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) + COALESCE("OTHER4_AMOUNT",0) 
          + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) + COALESCE("OTHER7_AMOUNT",0) + COALESCE("OTHER8_AMOUNT",0) 
          + COALESCE("OTHER9_AMOUNT",0) )
       END),0) "DAILY_OTHER_AMOUNT" FROM DAILYTRAN 
                  WHERE "TRAN_STATUS" = '.$status.'  And "TRAN_ACTYPE" = 7 And CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.','.$d_format.')
                  GROUP BY "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" ) DAILYTRAN ON LNMASTER."AC_TYPE" = DAILYTRAN."TRAN_ACTYPE" 
       AND LNMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"       
WHERE
LNMASTER."AC_TYPE" = VWTMPZBALANCEOD."AC_TYPE" AND LNMASTER."BANKACNO" = VWTMPZBALANCEOD."BANKACNO" 
AND LNMASTER."AC_TYPE" = VWTMPZLNOVERDUE."AC_TYPE" 
AND LNMASTER."BANKACNO" = VWTMPZLNOVERDUE."BANKACNO"	   
AND LNMASTER."AC_CUSTID" = CUSTOMERADDRESS."idmasterID"
AND (CAST(LNMASTER."AC_OPDATE" AS DATE) IS NULL OR CAST(LNMASTER."AC_OPDATE" AS DATE) <= To_DATE('.$date.','.$d_format.'))
AND (CAST(LNMASTER."AC_CLOSEDT" AS DATE) IS NULL OR CAST(LNMASTER."AC_CLOSEDT" AS DATE) > TO_DATE('.$date.', '.$d_format.')) 
AND LNMASTER."AC_TYPE" = '.$acType.'    
) TMP 
WHERE COALESCE("AC_NO",0) <> 0  
AND (   COALESCE(TMP."OTHER_AMOUNT",0)  
 + COALESCE(TMP."DUE_BALANCE",0)  
 + COALESCE(TMP."OTHER10_AMOUNT",0)  
  + COALESCE(TMP."CURRENT_INT",0)  
 + COALESCE(TMP."RECPAY_INT_AMOUNT",0)  ) <> 0 
 AND "DUEINSTALLMENT" >= '.$startingcode.'
 AND "DUEINSTALLMENT" <= '.$endingcode.'
 
';
}
else
{
    $query ='SELECT TMP.*   , FLOOR(CASE TMP."AC_ACNOTYPE"  WHEN '.$c.' THEN  
    extract(year from age(TO_DATE('.$date.','.$d_format.'), CASE CAST(TMP."AC_EXPIRE_DATE" AS DATE) WHEN Null THEN TO_DATE('.$date.','.$d_format.') ELSE CAST(TMP."AC_EXPIRE_DATE" AS DATE) END)) * 12 
    + extract(month from age(TO_DATE('.$date.','.$d_format.'), CASE CAST(TMP."AC_EXPIRE_DATE" AS DATE) WHEN Null THEN TO_DATE('.$date.','.$d_format.') ELSE CAST(TMP."AC_EXPIRE_DATE" AS DATE) END))
               ELSE CASE COALESCE(TMP."AC_INSTALLMENT",0)  WHEN 0  THEN  0  
               ELSE (COALESCE(TMP."DUE_BALANCE",0)/ COALESCE(TMP."AC_INSTALLMENT",0)) END END) NO_OF_INSTALLMENTS 
    From 
    ( SELECT 0 "CURRENT_INT", LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO" , LNMASTER."AC_NAME" 
    , CUSTOMERADDRESS."AC_HONO", CUSTOMERADDRESS."AC_WARD", CUSTOMERADDRESS."AC_ADDR" ,CUSTOMERADDRESS."AC_GALLI", CUSTOMERADDRESS."AC_AREA", CUSTOMERADDRESS."AC_AREA"
    , LNMASTER."AC_OPDATE" , LNMASTER."AC_SANCTION_AMOUNT" , LNMASTER."AC_EXPIRE_DATE" , LNMASTER."AC_REPAYMODE" , LNMASTER."AC_INSTALLMENT" , LNMASTER."AC_RECOMMEND_BY", DIRECTORMASTER."NAME" "DIRECTOR_NAME" 
    , CASE CAST(SCHEMAST."MORATORIUM_APPLICABLE" AS INTEGER)  WHEN 0  THEN  0  ELSE LNMASTER."AC_MORATORIUM_PERIOD" END "AC_MORATORIUM_PERIOD" , 
    CASE CAST(SCHEMAST."GRACE_PERIOD_APPLICABLE" AS INTEGER)  WHEN 0  THEN  0  ELSE LNMASTER."AC_GRACE_PERIOD" END "AC_GRACE_PERIOD" 
    , ( COALESCE(CASE  LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE (-1)* LNMASTER."AC_RECBLEINT_OP" END,0) + COALESCE(LOANTRAN."RECPAY_INT_AMOUNT",0) + COALESCE(DAILYTRAN."DAILY_RECPAY_INT_AMOUNT",0)) "RECPAY_INT_AMOUNT"  
    , ( COALESCE(CASE  LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEODUEINT_OP" ELSE (-1)* LNMASTER."AC_RECBLEODUEINT_OP" END,0) + COALESCE(LOANTRAN."OTHER10_AMOUNT",0) + COALESCE(DAILYTRAN."DAILY_OTHER10_AMOUNT",0)) "OTHER10_AMOUNT" 
    , ( COALESCE(LOANTRAN."OTHER_AMOUNT",0) + COALESCE(DAILYTRAN."DAILY_OTHER_AMOUNT",0)) "OTHER_AMOUNT",  
    SCHEMAST."S_NAME" , SCHEMAST."S_SHNAME"  , 
    COALESCE(VWTMPZBALANCEOD."CLOSING_BALANCE",0) "LEDGER_BALANCE" , COALESCE(VWTMPZLNOVERDUE."DUEBALANCE",0) "DUE_BALANCE" , 
    VWTMPZLNOVERDUE."OVERDUEDATE" "OVERDUE_DATE",VWTMPZLNOVERDUE."DUEINSTALLMENT",VWTMPZLNOVERDUE."BRANCH_CODE"
    From CUSTOMERADDRESS, 
      (
      SELECT LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."BANKACNO",LNMASTER."AC_NO", LNMASTER."AC_OPDATE", LNMASTER."AC_CLOSEDT" 
    , (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL" AS FLOAT)  ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT) END,0) 
    + COALESCE(CAST(LOANTRAN."TRAN_AMOUNT" AS FLOAT),0) + COALESCE(CAST(DAILYTRAN."DAILY_AMOUNT" AS FLOAT),0)) "CLOSING_BALANCE"
                ,  (COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE (-1) * CAST(LNMASTER."AC_RECBLEINT_OP" AS FLOAT) END,0) 
                    + COALESCE(CAST(LOANTRAN."RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE(CAST(DAILYTRAN."DAILY_RECPAY_INT_AMOUNT" AS FLOAT),0) 
                      + COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN CAST("AC_RECBLEODUEINT_OP" AS FLOAT) ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) 
                    + COALESCE(CAST(LOANTRAN."OTHER10_AMOUNT" AS FLOAT),0) + COALESCE(CAST(DAILYTRAN."DAILY_OTHER10_AMOUNT" AS FLOAT),0)) "RECPAY_INT_AMOUNT" 
    FROM LNMASTER LEFT OUTER JOIN
          ( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "TRAN_AMOUNT" 
               , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "RECPAY_INT_AMOUNT" 
               , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("OTHER10_AMOUNT" AS FLOAT)  END),0) "OTHER10_AMOUNT"  
           FROM LOANTRAN WHERE CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.', '.$d_format.')
                GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO" ) LOANTRAN 
                ON LNMASTER."AC_TYPE"  = LOANTRAN."TRAN_ACTYPE" AND LNMASTER."BANKACNO" =  LOANTRAN."TRAN_ACNO" LEFT OUTER JOIN
          ( SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "DAILY_AMOUNT" 
                , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "DAILY_RECPAY_INT_AMOUNT"  
                , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("OTHER10_AMOUNT" AS FLOAT) END),0) "DAILY_OTHER10_AMOUNT"  
                FROM DAILYTRAN WHERE CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.', '.$d_format.')
                AND "TRAN_STATUS" = '.$status.' GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"
          ) DAILYTRAN ON LNMASTER."AC_TYPE"  = DAILYTRAN."TRAN_ACTYPE" AND LNMASTER."BANKACNO" =  DAILYTRAN."TRAN_ACNO" Where
           ((CAST(LNMASTER."AC_OPDATE" AS DATE) IS NULL) OR (CAST(LNMASTER."AC_OPDATE" AS DATE) <= To_DATE('.$date.','.$d_format.')))
           AND ((CAST(LNMASTER."AC_CLOSEDT" AS DATE) IS NULL) OR (CAST(LNMASTER."AC_CLOSEDT" AS DATE) > To_DATE('.$date.','.$d_format.')))
    ) VWTMPZBALANCEOD,
    (
    SELECT SCHEMAST."S_APPL",SCHEMAST."S_APPL" || '.$space. ' || SCHEMAST."S_NAME" "SCHEME", LNMASTER."AC_ACNOTYPE", LNMASTER."AC_TYPE", LNMASTER."AC_NO", LNMASTER."AC_NAME",  LNMASTER."BANKACNO", LNMASTER."AC_OPDATE", LNMASTER."idmasterID",
    LNMASTER."AC_CLOSEDT",  DIRECTORMASTER.ID ||'.$space. ' || DIRECTORMASTER."NAME" "DIRECTORMASTER", "AC_RECOMMEND_BY" "DIRECTOR",
    AUTHORITYMASTER.ID || '.$space. ' || AUTHORITYMASTER."NAME" "AUTHORITYMASTER", "AC_AUTHORITY" "AUTHORITY",
    RECOVERYCLEARKMASTER.ID || '.$space. ' || RECOVERYCLEARKMASTER."NAME" "RECOVERYCLEARKMASTER", "AC_RECOVERY_CLERK",
    OWNBRANCHMASTER.ID || '.$space. ' || OWNBRANCHMASTER."NAME" "BRANCH",LNMASTER."BRANCH_CODE",
    CUSTOMERADDRESS."AC_CTCODE" "CITY", CITYMASTER."CITY_NAME" "CITYNAME", CUSTOMERADDRESS."AC_ADDR" || '.$space. ' || CUSTOMERADDRESS."AC_AREA" "ADDRESS",
    LNMASTER."AC_MORATORIUM_PERIOD",LNMASTER."AC_SANCTION_AMOUNT", LNMASTER."AC_GRACE_PERIOD", LNMASTER."AC_REPAYMODE", IDMASTER."AC_MOBILENO",
       (COALESCE(CASE LNMASTER."AC_OP_CD"  WHEN '.$D.' THEN  CAST(LNMASTER."AC_OP_BAL" AS FLOAT)  ELSE 
                  (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT) END,0) +
         COALESCE(CAST(TRANTABLE."TRAN_AMOUNT" AS FLOAT),0) )
         "CLOSING_BALANCE"
       ,(COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN LNMASTER."AC_RECBLEINT_OP" ELSE
                  (-1) * LNMASTER."AC_RECBLEINT_OP" END,0) + 
         COALESCE(CAST(TRANTABLE."RECPAY_INT_AMOUNT" AS FLOAT),0)
       + COALESCE(CASE LNMASTER."AC_OP_CD" WHEN '.$D.' THEN CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) ELSE 
                  (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS FLOAT) END,0) + 
         COALESCE(CAST(TRANTABLE."OTHER10_AMOUNT" AS FLOAT),0) ) "RECPAY_INT_AMOUNT",
    LNMASTER."AC_INSTALLMENT",OIRINTBALANCE(SCHEMAST."S_APPL",LNMASTER."BANKACNO",'.$date.',0) "OVERDUEINTEREST",
    (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then CEIL(CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT)/CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))ELSE 0 END ) "TOTALINSTALLMENTS",
    (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then ceil(DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0)/
     CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))ELSE 0 END ) "DUEINSTALLMENT",
     (case when CAST (LNMASTER."AC_INSTALLMENT" as FLOAT) <> 0  then ceil((CAST(LNMASTER."AC_SANCTION_AMOUNT" AS FLOAT)-
     DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0)
     )/CAST(LNMASTER."AC_INSTALLMENT" AS FLOAT))ELSE 0 END ) "PAIDINSTALLMENTS",
    DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0) "DUEBALANCE",
    "AC_EXPIRE_DATE", 
    overduedate(CAST(SCHEMAST."S_APPL" AS INTEGER),LNMASTER."BANKACNO", CAST('.$date.' AS CHARACTER VARYING) ,
    CAST(DueBalance(CAST(SCHEMAST."S_APPL" AS CHARACTER VARYING),LNMASTER."BANKACNO",'.$date.','.$dueBalance.',0) AS CHARACTER VARYING), 
    CAST(LNMASTER."AC_INSTALLMENT" AS CHARACTER VARYING)) "OVERDUEDATE"
       FROM LNMASTER LEFT JOIN SCHEMAST ON SCHEMAST.ID= LNMASTER."AC_TYPE"
       LEFT JOIN DIRECTORMASTER ON DIRECTORMASTER.ID=CAST(LNMASTER."AC_RECOMMEND_BY" AS INTEGER)
       LEFT JOIN RECOVERYCLEARKMASTER ON RECOVERYCLEARKMASTER.ID=CAST(LNMASTER."AC_RECOVERY_CLERK" AS INTEGER)
       LEFT JOIN AUTHORITYMASTER ON AUTHORITYMASTER.ID=LNMASTER."AC_AUTHORITY" 
       LEFT JOIN OWNBRANCHMASTER ON OWNBRANCHMASTER.ID=LNMASTER."BRANCH_CODE"
       LEFT JOIN CUSTOMERADDRESS ON CUSTOMERADDRESS."idmasterID"=LNMASTER."idmasterID" 
       AND CUSTOMERADDRESS."AC_ADDTYPE" ='.$P.'
       LEFT JOIN CITYMASTER ON CITYMASTER.ID= CUSTOMERADDRESS."AC_CTCODE"
       LEFT JOIN IDMASTER ON IDMASTER.ID=LNMASTER."idmasterID",
             ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , 
    COALESCE(SUM(COALESCE(CAST("TRAN_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_AMOUNT",0)),0) "TRAN_AMOUNT",
    COALESCE(SUM(COALESCE(CAST("RECPAY_INT_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_RECPAY_INT_AMOUNT",0)),0) "RECPAY_INT_AMOUNT",
    COALESCE(SUM(COALESCE(CAST("OTHER10_AMOUNT" AS FLOAT),0) + COALESCE("DAILY_OTHER10_AMOUNT",0)),0) "OTHER10_AMOUNT" FROM
    (SELECT * FROM (SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", 
              COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "TRAN_AMOUNT" 
             , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "RECPAY_INT_AMOUNT"
             , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN CAST ("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT) END),0) "OTHER10_AMOUNT", 
               0 "DAILY_AMOUNT",0 "DAILY_RECPAY_INT_AMOUNT",0 "DAILY_OTHER10_AMOUNT"
               FROM LOANTRAN 
       WHERE cast("TRAN_DATE" as date) <= TO_DATE('.$date.', '.$d_format.') AND   "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
       GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"		
       UNION ALL		
       SELECT "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO", COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("TRAN_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) "DAILY_AMOUNT" 
       , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST("RECPAY_INT_AMOUNT" AS FLOAT)  ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END),0) "DAILY_RECPAY_INT_AMOUNT"  
       , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.' THEN  CAST ("OTHER10_AMOUNT" AS FLOAT)  ELSE (-1) * CAST ("OTHER10_AMOUNT" AS FLOAT)  END),0) "DAILY_OTHER10_AMOUNT"  ,
       0 "TRAN_AMOUNT", 0  "RECPAY_INT_AMOUNT", 0 "OTHER10_AMOUNT"  FROM DAILYTRAN WHERE cast("TRAN_DATE" as date) <= TO_DATE('.$date.', '.$d_format.')
       AND "TRAN_STATUS" = '.$status.'  AND "TRAN_ACNOTYPE" IN ('.$LN.','.$CC.','.$DS.')
       GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") RS
       ORDER BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO")AMOUNT
           GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO"
    ) TRANTABLE
       Where LNMASTER."AC_ACNOTYPE"  = TRANTABLE."TRAN_ACNOTYPE"
        AND LNMASTER."AC_TYPE"  = CAST(TRANTABLE."TRAN_ACTYPE" AS INTEGER)
        AND LNMASTER."BANKACNO"=  TRANTABLE."TRAN_ACNO"
        AND LNMASTER."status"=1 AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
        ORDER BY SCHEMAST."S_APPL", LNMASTER."BANKACNO" 
    ) VWTMPZLNOVERDUE, LNMASTER	   
    LEFT OUTER JOIN SCHEMAST ON LNMASTER."AC_TYPE" = SCHEMAST.ID 
    LEFT OUTER JOIN DIRECTORMASTER ON LNMASTER."AC_RECOMMEND_BY"=DIRECTORMASTER."CODE"   
    LEFT OUTER JOIN ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  
       THEN  "RECPAY_INT_AMOUNT"  ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) "RECPAY_INT_AMOUNT" 
    , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  "OTHER10_AMOUNT"  ELSE (-1) * "OTHER10_AMOUNT" END),0) "OTHER10_AMOUNT" 
    , (COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN  COALESCE("PENAL_INTEREST",0)  ELSE (-1) * COALESCE("PENAL_INTEREST",0) END),0) 
       + COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN  COALESCE("REC_PENAL_INT_AMOUNT",0)  ELSE (-1) * COALESCE("REC_PENAL_INT_AMOUNT",0) END),0)) PENAL_INTEREST 
    , COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN (COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) 
    + COALESCE("OTHER4_AMOUNT",0) + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) + COALESCE("OTHER7_AMOUNT",0) 
    + COALESCE("OTHER8_AMOUNT",0) + COALESCE("OTHER9_AMOUNT",0) )
         ELSE (-1) * ( COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) + COALESCE("OTHER4_AMOUNT",0) 
       + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) + COALESCE("OTHER7_AMOUNT",0) + COALESCE("OTHER8_AMOUNT",0) 
                    + COALESCE("OTHER9_AMOUNT",0) )
       END),0) "OTHER_AMOUNT" FROM LOANTRAN WHERE COALESCE(CAST("TRAN_ACNO" AS BIGINT),0) <> 0  And "TRAN_ACTYPE" = 7 
                  And CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.','.$d_format.') 
    GROUP BY "TRAN_ACNOTYPE", "TRAN_ACTYPE", "TRAN_ACNO") LOANTRAN ON LNMASTER."AC_TYPE" = LOANTRAN."TRAN_ACTYPE" 
      AND LNMASTER."BANKACNO" = LOANTRAN."TRAN_ACNO" 
     LEFT OUTER JOIN ( SELECT "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" 
    , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  "RECPAY_INT_AMOUNT"  ELSE (-1) * "RECPAY_INT_AMOUNT" END),0) "DAILY_RECPAY_INT_AMOUNT" 
    , COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  "OTHER10_AMOUNT"  ELSE (-1) * "OTHER10_AMOUNT" END),0) "DAILY_OTHER10_AMOUNT" 
    , (COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  COALESCE("PENAL_INT_AMOUNT",0)  ELSE (-1) * COALESCE("PENAL_INT_AMOUNT",0) END),0) 
       + COALESCE(SUM(CASE "TRAN_DRCR"  WHEN '.$D.'  THEN  COALESCE("REC_PENAL_INT_AMOUNT",0)  ELSE (-1) * COALESCE("REC_PENAL_INT_AMOUNT",0) 
    END),0)) "PENAL_INT_AMOUNT" 
    , COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$D.' THEN (COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) 
                                                   + COALESCE("OTHER4_AMOUNT",0) + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) 
                                                   + COALESCE("OTHER7_AMOUNT",0) + COALESCE("OTHER8_AMOUNT",0) + COALESCE("OTHER9_AMOUNT",0) )
    ELSE (-1) * ( COALESCE("OTHER1_AMOUNT",0) + COALESCE("OTHER2_AMOUNT",0) + COALESCE("OTHER3_AMOUNT",0) + COALESCE("OTHER4_AMOUNT",0) 
              + COALESCE("OTHER5_AMOUNT",0) + COALESCE("OTHER6_AMOUNT",0) + COALESCE("OTHER7_AMOUNT",0) + COALESCE("OTHER8_AMOUNT",0) 
              + COALESCE("OTHER9_AMOUNT",0) )
           END),0) "DAILY_OTHER_AMOUNT" FROM DAILYTRAN 
                      WHERE "TRAN_STATUS" = '.$status.'  And "TRAN_ACTYPE" = 7 And CAST("TRAN_DATE" AS DATE) <= TO_DATE('.$date.','.$d_format.')
                      GROUP BY "TRAN_ACNOTYPE" , "TRAN_ACTYPE" , "TRAN_ACNO" ) DAILYTRAN ON LNMASTER."AC_TYPE" = DAILYTRAN."TRAN_ACTYPE" 
           AND LNMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"       
    WHERE
    LNMASTER."AC_TYPE" = VWTMPZBALANCEOD."AC_TYPE" AND LNMASTER."BANKACNO" = VWTMPZBALANCEOD."BANKACNO" 
    AND LNMASTER."AC_TYPE" = VWTMPZLNOVERDUE."AC_TYPE" 
    AND LNMASTER."BANKACNO" = VWTMPZLNOVERDUE."BANKACNO"	   
    AND LNMASTER."AC_CUSTID" = CUSTOMERADDRESS."idmasterID"
    AND (CAST(LNMASTER."AC_OPDATE" AS DATE) IS NULL OR CAST(LNMASTER."AC_OPDATE" AS DATE) <= To_DATE('.$date.','.$d_format.'))
    AND (CAST(LNMASTER."AC_CLOSEDT" AS DATE) IS NULL OR CAST(LNMASTER."AC_CLOSEDT" AS DATE) > TO_DATE('.$date.', '.$d_format.')) 
    AND LNMASTER."AC_TYPE" = '.$acType.'    
    ) TMP 
    WHERE COALESCE("AC_NO",0) <> 0  
    AND (   COALESCE(TMP."OTHER_AMOUNT",0)  
     + COALESCE(TMP."DUE_BALANCE",0)  
     + COALESCE(TMP."OTHER10_AMOUNT",0)  
      + COALESCE(TMP."CURRENT_INT",0)  
     + COALESCE(TMP."RECPAY_INT_AMOUNT",0)  ) <> 0 
     AND "DUEINSTALLMENT" >= '.$startingcode.'
     AND "DUEINSTALLMENT" <= '.$endingcode.'
     AND "BRANCH_CODE"= '.$branchCode.'
    
    
    ';
    }



// echo $query;




$sql =  pg_query($conn,$query);
$i = 0;
$balanceTotal = 0 ;
$sanctionAmtTotal = 0 ;
$actotal = 0 ;
$dueBalTotal = 0 ;

if (pg_num_rows($sql) == 0) {
    include "errormsg.html";
}else {



while($row = pg_fetch_assoc($sql)){
   
    $balanceTotal +=  $row['LEDGER_BALANCE'];
    $sanctionAmtTotal +=  $row['AC_SANCTION_AMOUNT'];
    $actotal +=  $row['AC_INSTALLMENT'];
    $dueBalTotal +=  $row['DUE_BALANCE'];

        $tmp=[
        'BankName' => $bankName,
        'Branch'=> $branch,
        'Name' => $row['AC_NAME'],
        'accNo'=> $row['AC_NO'],
        'scheme'=> $row['AC_ACNOTYPE'],
        'schemeName' => $row['S_NAME'],
        'openingDate'=> $row['AC_OPDATE'],
        'expDate' => $row['AC_EXPIRE_DATE'],
        'sanctionAmt'=> sprintf("%.2f",($row['AC_SANCTION_AMOUNT']) + 0.0 ),
        'acInstallment'=> sprintf("%.2f",($row['AC_INSTALLMENT']) + 0.0 ),
        'balance' => sprintf("%.2f",($row['LEDGER_BALANCE']) + 0.0 ),
        'dueInstallment'=> $row['DUEINSTALLMENT'],
        'recPayAmt'=> $row['RECPAY_INT_AMOUNT'],
        'dueBal' => sprintf("%.2f",($row['DUE_BALANCE']) + 0.0 ),
        'Date' => $Date1,
        'balanceTotal' => sprintf("%.2f",($balanceTotal + 0.0 )),
        'sanctionAmtTotal' => sprintf("%.2f",($sanctionAmtTotal + 0.0 )),
        'actotal' => sprintf("%.2f",($actotal + 0.0 )),
        'dueBalTotal' => sprintf("%.2f",($dueBalTotal + 0.0 )),

    ];    
    $data[$i]=$tmp;
    $i++;   
}
}
// for clean previous execution
ob_end_clean();
// 
$config = ['driver'=>'array','data'=>$data];
// for pdf conversion of report
$report = new PHPJasperXML();
$report->load_xml_file($filename)    
    ->setDataSource($config)
    ->export('Pdf');
    
?>    

