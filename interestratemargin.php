<?php

ob_start();
include "main.php";
require_once('dbconnect.php'); 

// ini_set('display_errors', '1');
// ini_set('display_startup_errors', '1');
// error_reporting(E_ALL);

use simitsdk\phpjasperxml\PHPJasperXML;

$filename = __DIR__.'/interestratemargin.jrxml';


$data = [];
$row = [];
$faker = Faker\Factory::create('en_US');

// $conn = pg_connect("host=127.0.0.1 dbname=CBSBhairavnath user=postgres password=admin");

$dateformate = "'DD/MM/YYYY'";

$edate = $_GET['edate'];
$sdate = $_GET['sdate'];
$Branch  = $_GET['Branch'];
$branch_code1 = $_GET['branch_code1'];
$branch_code2 = $_GET['branch_code2'];
$BankName = $_GET['BankName'];
$trandrcr = "'D'";
$ac_op_cd = "'D'";

//$TRANACTYPE = $_GET['TRANACTYPE'];
$TRANSTATUS = "'1'";
$AC_ACNOTYPE = $_GET['AC_ACNOTYPE'];
$AC_ACNOTYPE1 = $_GET['AC_ACNOTYPE1'];
$AC_ACNOTYPE2 = $_GET['AC_ACNOTYPE2'];
$AC_ACNOTYPE4 = $_GET['AC_ACNOTYPE4'];
$DESCRIPTION1 = "'Investment Details'";
$DESCRIPTION2 = "'Deposit Details'";
$DESCRIPTION3 = "'Loan Details'";
//$flag1 = $_GET['flag1'];
$query='';

$edate2 = str_replace("'" , "" , $edate);
$Branch = str_replace("'" , "" , $Branch);
$BankName1 = str_replace("'" , "" , $BankName);




$query='
SELECT * FROM (SELECT INT_RATE,
'.$DESCRIPTION1.' DESCRIPTION,
	"AC_DAYS",
	COUNT(*) "NO_OF_ACS",
	0 "TOT_BALANCE",
	SUM(CLOSING_BALANCE) INV_BALANCE,
	"S_APPL",
	"S_NAME"
FROM
	(SELECT VWTMPZAVDPMASTER.*,SCHEMAST."S_APPL",SCHEMAST."S_NAME",
			COALESCE(CAST(DPMASTER."AC_INTRATE" AS FLOAT),0) INT_RATE
		FROM DPMASTER
		INNER JOIN
			(SELECT "AC_ACNOTYPE",
					"AC_TYPE",
					"AC_NO",
					"AC_OPDATE",
					"AC_CLOSEDT",
					"BANKACNO",
					"AC_DAYS",
					(COALESCE(CASE "AC_OP_CD" WHEN '.$ac_op_cd.' THEN CAST("AC_OP_BAL" AS FLOAT)
ELSE (-1) * CAST("AC_OP_BAL" AS FLOAT)	END,0) + COALESCE(DEPOTRAN.TRAN_AMOUNT,
0) + COALESCE(DAILYTRAN.DAILY_AMOUNT,	0)) CLOSING_BALANCE,
					(COALESCE(CASE DPMASTER."AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST(DPMASTER."AC_PAYBLEINT_OP" AS integer)
ELSE (-1) * CAST(DPMASTER."AC_PAYBLEINT_OP" AS integer)	END,0) + COALESCE(DEPOTRAN.RECPAY_INT_AMOUNT,
0) + COALESCE(DAILYTRAN.RECPAY_INT_AMOUNT,	0)) RECPAY_INT_AMOUNT
				FROM DPMASTER
				LEFT OUTER JOIN
					(SELECT "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO",
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) TRAN_AMOUNT,
							SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)	END) RECPAY_INT_AMOUNT
						FROM DEPOTRAN
						WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
					 AND "BRANCH_CODE"='.$branch_code1.'
						GROUP BY "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO") DEPOTRAN ON DPMASTER."BANKACNO" = DEPOTRAN."TRAN_ACNO"
				LEFT OUTER JOIN
					(SELECT "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO",
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) DAILY_AMOUNT,
							SUM(CASE "TRAN_DRCR" WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)	END) RECPAY_INT_AMOUNT
						FROM DAILYTRAN
						WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
							AND "TRAN_STATUS" = '.$TRANSTATUS.'
					 AND "BRANCH_CODE"='.$branch_code1.'
						GROUP BY "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO") DAILYTRAN ON DPMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"
				WHERE ((DPMASTER."AC_OPDATE" IS NULL)
											OR (CAST(DPMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date)))
					AND ((DPMASTER."AC_CLOSEDT" IS NULL)
										OR (CAST(DPMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date)))
			 AND  DPMASTER."BRANCH_CODE"='.$branch_code1.' AND DPMASTER."status"=1 AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL
			) VWTMPZAVDPMASTER ON VWTMPZAVDPMASTER."BANKACNO" = DPMASTER."BANKACNO"
	 left join schemast on schemast.id= dpmaster."AC_TYPE"
		WHERE (DPMASTER."AC_OPDATE" IS NULL
									OR CAST(DPMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date))
	 AND  DPMASTER."BRANCH_CODE"='.$branch_code1.' AND DPMASTER."status"=1 AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL
			AND (DPMASTER."AC_CLOSEDT" IS NULL
								OR CAST(DPMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date))
			AND VWTMPZAVDPMASTER."AC_ACNOTYPE" = '.$AC_ACNOTYPE.' ) S
GROUP BY INT_RATE,
	"AC_DAYS","S_APPL",
	"S_NAME"
	ORDER BY "S_APPL") A

UNION ALL

SELECT * FROM (SELECT COALESCE(INT_RATE,0) INT_RATE,
	'.$DESCRIPTION2.' DESCRIPTION,
	CAST("AC_DAYS" AS CHARACTER VARYING),
	COALESCE(COUNT(*),
		0) "NO_OF_ACS",
	COALESCE(SUM(CLOSING_BALANCE),
		0) TOT_BALANCE,
	0 INV_BALANCE,
		"S_APPL",
	"S_NAME"
FROM
	(SELECT VWTMPZAVDPMASTER.*, SCHEMAST."S_APPL",
			 SCHEMAST."S_NAME",
			CAST(DPMASTER."AC_DAYS" AS INTEGER),
			COALESCE(CASE VWTMPZAVDPMASTER."AC_ACNOTYPE"
WHEN '.$AC_ACNOTYPE4.' THEN CAST(DPMASTER."AC_INTRATE" AS FLOAT)
ELSE CAST(DPMASTER."AC_INTRATE" AS FLOAT) END, 0) INT_RATE
		FROM DPMASTER
		INNER JOIN
			(SELECT "AC_ACNOTYPE",
					"AC_TYPE",
					"AC_NO",
					"AC_OPDATE",
					"AC_CLOSEDT",
					"BANKACNO",			
					(COALESCE(CASE "AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST("AC_OP_BAL" AS FLOAT)
ELSE (-1) * CAST("AC_OP_BAL" AS FLOAT) END,
0) + COALESCE(DEPOTRAN.TRAN_AMOUNT,
0) + COALESCE(DAILYTRAN.DAILY_AMOUNT,
0)) CLOSING_BALANCE,
(COALESCE(CASE DPMASTER."AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST(DPMASTER."AC_PAYBLEINT_OP" AS integer)
ELSE (-1) * CAST(DPMASTER."AC_PAYBLEINT_OP" AS integer)END,
0) + COALESCE(DEPOTRAN.RECPAY_INT_AMOUNT,
0) + COALESCE(DAILYTRAN.RECPAY_INT_AMOUNT,
0)) RECPAY_INT_AMOUNT
				FROM DPMASTER
				LEFT OUTER JOIN
					(SELECT "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO",
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) TRAN_AMOUNT,
							SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END) RECPAY_INT_AMOUNT
						FROM DEPOTRAN
						WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
					 AND "BRANCH_CODE"='.$branch_code1.'
						GROUP BY "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO") DEPOTRAN ON DPMASTER."BANKACNO" = DEPOTRAN."TRAN_ACNO"
				LEFT OUTER JOIN
					(SELECT "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO",
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),0) DAILY_AMOUNT,
SUM(CASE "TRAN_DRCR" WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT) END) RECPAY_INT_AMOUNT
FROM DAILYTRAN WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
AND "TRAN_STATUS" = '.$TRANSTATUS.' AND "BRANCH_CODE"='.$branch_code1.'
GROUP BY "TRAN_ACNOTYPE",
"TRAN_ACTYPE", "TRAN_ACNO") DAILYTRAN ON DPMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"
WHERE ((DPMASTER."AC_OPDATE" IS NULL)
OR (CAST(DPMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date)))
AND ((DPMASTER."AC_CLOSEDT" IS NULL)
OR (CAST(DPMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date)))
			) VWTMPZAVDPMASTER ON VWTMPZAVDPMASTER."BANKACNO" = DPMASTER."BANKACNO"
	 LEFT JOIN SCHEMAST ON SCHEMAST.ID=DPMASTER."AC_TYPE"
		WHERE (VWTMPZAVDPMASTER."AC_ACNOTYPE" NOT IN ('.$AC_ACNOTYPE1.','.$AC_ACNOTYPE2.','.$AC_ACNOTYPE.'))
			AND (DPMASTER."AC_CLOSEDT" IS NULL
								OR CAST(DPMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date))
			AND (DPMASTER."AC_OPDATE" IS NULL
								OR CAST(DPMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date))
	 AND DPMASTER.STATUS=1 AND DPMASTER."SYSCHNG_LOGIN" IS NOT NULL AND DPMASTER."BRANCH_CODE"='.$branch_code1.'
		UNION ALL
	 SELECT VWTMPZAVPGMASTER.*,SCHEMAST."S_APPL",SCHEMAST."S_NAME",
			(CAST(PGMASTER."AC_MONTHS" AS INTEGER) * 30) "AC_DAYS" , 0 INT_RATE
		FROM PGMASTER
		INNER JOIN
			(SELECT "AC_ACNOTYPE",
					"AC_TYPE",
					"AC_NO",
					"AC_OPDATE",
					"AC_CLOSEDT",
					"BANKACNO",
					(COALESCE(CASE "AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST("AC_OP_BAL" AS FLOAT)
ELSE (-1) * CAST("AC_OP_BAL" AS FLOAT) END,
0) + COALESCE(PIGMYTRAN.TRAN_AMOUNT, 0) + COALESCE(DAILYTRAN.DAILY_AMOUNT, 0)) CLOSING_BALANCE,
(COALESCE(CASE PGMASTER."AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST(PGMASTER."AC_PAYBLEINT_OP" AS integer)
ELSE (-1) * CAST(PGMASTER."AC_PAYBLEINT_OP" AS integer) END,
0) + COALESCE(PIGMYTRAN.RECPAY_INT_AMOUNT,
0) + COALESCE(DAILYTRAN.RECPAY_INT_AMOUNT,
0)) RECPAY_INT_AMOUNT
FROM PGMASTER
LEFT OUTER JOIN
(SELECT "TRAN_ACNOTYPE",
"TRAN_ACTYPE",
"TRAN_ACNO",
COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END), 0) TRAN_AMOUNT,
SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)
END) RECPAY_INT_AMOUNT
FROM PIGMYTRAN
WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
 AND "BRANCH_CODE"='.$branch_code1.'
GROUP BY "TRAN_ACNOTYPE",
"TRAN_ACTYPE",
"TRAN_ACNO") PIGMYTRAN ON PGMASTER."BANKACNO" = PIGMYTRAN."TRAN_ACNO"
LEFT OUTER JOIN
(SELECT "TRAN_ACNOTYPE",
"TRAN_ACTYPE",
"TRAN_ACNO",
COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)
END),0) DAILY_AMOUNT, SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)
END) RECPAY_INT_AMOUNT
FROM DAILYTRAN
WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
 AND "BRANCH_CODE"='.$branch_code1.'
AND "TRAN_STATUS" = '.$TRANSTATUS.'
GROUP BY "TRAN_ACNOTYPE",
"TRAN_ACTYPE",
"TRAN_ACNO") DAILYTRAN ON PGMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"
				WHERE ((PGMASTER."AC_OPDATE" IS NULL)
OR (CAST(PGMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date)))
					AND ((PGMASTER."AC_CLOSEDT" IS NULL)
OR (CAST(PGMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date)))
			) VWTMPZAVPGMASTER ON VWTMPZAVPGMASTER."BANKACNO" = PGMASTER."BANKACNO"
	 LEFT JOIN SCHEMAST ON SCHEMAST.ID=PGMASTER."AC_TYPE"
		WHERE (PGMASTER."AC_OPDATE" IS NULL
OR CAST(PGMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date))
			AND (PGMASTER."AC_CLOSEDT" IS NULL
OR CAST(PGMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date)) 
	AND PGMASTER.STATUS=1 AND PGMASTER."SYSCHNG_LOGIN" IS NOT NULL AND PGMASTER."BRANCH_CODE"='.$branch_code1.') S
GROUP BY INT_RATE,
	"AC_DAYS",
		"S_APPL",
	"S_NAME"
	ORDER BY 	"S_APPL")B
	

UNION ALL

SELECT * FROM (SELECT COALESCE(INT_RATE,0) INT_RATE,
	'.$DESCRIPTION3.' DESCRIPTION,
	CAST("AC_DAYS" AS CHARACTER VARYING),
	COALESCE(COUNT(*),
		0) "NO_OF_ACS",
	COALESCE(SUM(CLOSING_BALANCE),
		0) TOT_BALANCE,
	0 INV_BALANCE,
		"S_APPL",
	"S_NAME"
FROM
	(SELECT VWTMPZAVLNMASTER.*,SCHEMAST."S_APPL",SCHEMAST."S_NAME",
			GETLNINTRATE(CAST(LNMASTER."AC_TYPE" AS CHARACTER varying),
				CAST(LNMASTER."BANKACNO" AS CHARACTER varying),
				CAST('.$edate.' AS CHARACTER varying)) INT_RATE
		FROM LNMASTER
		INNER JOIN
			(SELECT LNMASTER."AC_ACNOTYPE",
					LNMASTER."AC_TYPE",
					LNMASTER."AC_NO",
					LNMASTER."BANKACNO",
					CAST(LNMASTER."AC_MONTHS" AS INTEGER) *30 "AC_DAYS",
					LNMASTER."AC_OPDATE",
					LNMASTER."AC_CLOSEDT",
					(COALESCE(CASE LNMASTER."AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST(LNMASTER."AC_OP_BAL" AS FLOAT)
ELSE (-1) * CAST(LNMASTER."AC_OP_BAL" AS FLOAT)	END,
0) + COALESCE(LOANTRAN.TRAN_AMOUNT,	0) + COALESCE(DAILYTRAN.DAILY_AMOUNT,
0)) CLOSING_BALANCE, (COALESCE(CASE LNMASTER."AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST(LNMASTER."AC_PAYBLEINT_OP" AS integer)
ELSE (-1) * CAST(LNMASTER."AC_PAYBLEINT_OP" AS integer)	END,
0) + COALESCE(LOANTRAN.RECPAY_INT_AMOUNT,	0) + COALESCE(DAILYTRAN.DAILY_RECPAY_INT_AMOUNT,
0) + COALESCE(CASE LNMASTER."AC_OP_CD"
WHEN '.$ac_op_cd.' THEN CAST("AC_RECBLEODUEINT_OP" AS integer)
ELSE (-1) * CAST(LNMASTER."AC_RECBLEODUEINT_OP" AS integer)		END,
0) + COALESCE(LOANTRAN.OTHER10_AMOUNT,
0) + COALESCE(DAILYTRAN.DAILY_OTHER10_AMOUNT,
0)) RECPAY_INT_AMOUNT	FROM LNMASTER
LEFT OUTER JOIN
(SELECT "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO",
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT)END),0) TRAN_AMOUNT,	COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)	END),0) RECPAY_INT_AMOUNT,
COALESCE(SUM(CASE "TRAN_DRCR" WHEN '.$trandrcr.' THEN CAST("OTHER10_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT" AS FLOAT)	END),0) OTHER10_AMOUNT
						FROM LOANTRAN
						WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
 AND "BRANCH_CODE"='.$branch_code2.'
						GROUP BY "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO") LOANTRAN ON LNMASTER."BANKACNO" = LOANTRAN."TRAN_ACNO"
				LEFT OUTER JOIN
					(SELECT "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO",
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("TRAN_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("TRAN_AMOUNT" AS FLOAT) END),	0) DAILY_AMOUNT,
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("RECPAY_INT_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("RECPAY_INT_AMOUNT" AS FLOAT)	END),0) DAILY_RECPAY_INT_AMOUNT,
							COALESCE(SUM(CASE "TRAN_DRCR"
WHEN '.$trandrcr.' THEN CAST("OTHER10_AMOUNT" AS FLOAT)
ELSE (-1) * CAST("OTHER10_AMOUNT" AS FLOAT)	END),0) DAILY_OTHER10_AMOUNT
						FROM DAILYTRAN
						WHERE CAST("TRAN_DATE" AS date) <= CAST('.$edate.' AS date)
							AND "TRAN_STATUS" = '.$TRANSTATUS.'
					 AND "BRANCH_CODE"='.$branch_code2.'
						GROUP BY "TRAN_ACNOTYPE",
							"TRAN_ACTYPE",
							"TRAN_ACNO") DAILYTRAN ON LNMASTER."BANKACNO" = DAILYTRAN."TRAN_ACNO"
				WHERE ((LNMASTER."AC_OPDATE" IS NULL)
											OR (CAST(LNMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date)))
					AND ((LNMASTER."AC_CLOSEDT" IS NULL)
										OR (CAST(LNMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date)))
			 AND LNMASTER.STATUS=1 AND LNMASTER."BRANCH_CODE"='.$branch_code2.' AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL
			) VWTMPZAVLNMASTER ON VWTMPZAVLNMASTER."BANKACNO" = LNMASTER."BANKACNO"
	 LEFT JOIN SCHEMAST ON SCHEMAST.ID= LNMASTER."AC_TYPE"
		WHERE (LNMASTER."AC_OPDATE" IS NULL
									OR CAST(LNMASTER."AC_OPDATE" AS date) <= CAST('.$sdate.' AS date))
			AND (LNMASTER."AC_CLOSEDT" IS NULL
								OR CAST(LNMASTER."AC_CLOSEDT" AS date) > CAST('.$edate.' AS date))
	AND LNMASTER.STATUS=1 AND LNMASTER."BRANCH_CODE"='.$branch_code2.' AND LNMASTER."SYSCHNG_LOGIN" IS NOT NULL) 
	S	GROUP BY INT_RATE ,
	"AC_DAYS","S_APPL","S_NAME"
	ORDER BY 	"S_APPL")C ORDER BY "description","int_rate"   ';

	// echo $query ; 
          
$sql =  pg_query($conn,$query);

$i = 0;

$GRAND_TOTAL1 = 0;
$GRAND_TOTAL2 = 0;
$GRAND_TOTAL3 = 0;
// $GRAND_TOTAL4 = 0;
// $GRAND_TOTAL5 = 0;
// $GRAND_TOTAL6 = 0;
// $GRAND_TOTAL7 = 0;

// if ($row['tot_balance'] < 0) {
//     $netType = 'Cr';
// } else {
//     $netType = 'Dr';
// }



// if (pg_num_rows($sql) == 0) {
//     include "errormsg.html";
// }else {
	// $deposittotal=0;
	// $loantotal=0;

	if($row["description"]=='Deposit Details'){
        $tmp['avg_deposit']=$row["TOT_BALANCE"] ;
    }
    if($row["description"]=='Investment Details'&&'Loan Details'){
        $tmp['avg_loan_investment']=$row["TOT_BALANCE"] ;
    }

while($row = pg_fetch_assoc($sql)){

    $GRAND_TOTAL1 = $GRAND_TOTAL1 + $row["NO_OF_ACS"];
    $GRAND_TOTAL2 = $GRAND_TOTAL2 + sprintf("%.2f", (abs($row['TOT_BALANCE'])));
	$GRAND_TOTAL3 = $GRAND_TOTAL3 + $row["AC_DAYS"];

	
	// $GRAND_TOTAL4 = $GRAND_TOTAL4 + ($row["tot_ac_days"]*36500/$row["TOT_BALANCE"]);
	$GRAND_TOTAL5 = $GRAND_TOTAL5 + ($row["avg_loan_investment"] - $row["avg_deposit"]);
	// $GRAND_TOTAL6 = $GRAND_TOTAL6 + ($row["tot_ac_days"]*36500/$row["TOT_BALANCE"]);
	// $GRAND_TOTAL7 = $GRAND_TOTAL7 + ($row["tot_ac_days"]*36500/$row["TOT_BALANCE"]);

    $tmp=[
        "int_rate" => abs($row["int_rate"]),
        "NO_OF_ACS" => $row["NO_OF_ACS"],
        "AC_DAYS" => $row["AC_DAYS"],
        "description" => $row["description"],
		"S_APPL" => $row["S_APPL"],
		"S_NAME" => $row["S_NAME"],
     
        "TOT_BALANCE" =>sprintf("%.2f", (abs($row["TOT_BALANCE"]))),
       

        "total_accounts" => $GRAND_TOTAL1 ,
        "total_balance" =>sprintf("%.2f",($GRAND_TOTAL2) + 0.0 ) ,
		"tot_ac_days" =>sprintf("%.2f",($GRAND_TOTAL3) + 0.0 ) ,
		"avg_deposit" =>sprintf("%.2f", (abs($row['avg_deposit']))),
		"avg_loan_investment" => sprintf("%.2f", (abs($row['avg_loan_investment']))),
		"margin"=>sprintf("%.2f",($GRAND_TOTAL5) + 0.0 ) ,
        "edate" => $edate2,
        "sdate" => $sdate,
        "Branch" => $Branch,
        'branch_code1' => $branch_code1 ,
		'branch_code2' => $branch_code2 ,
        "BankName" => $BankName1,
        // "trandrcr" => $trandrcr,
        "TRANACTYPE" => $TRANACTYPE,
        // "TRANSTATUS" => $TRANSTATUS,
        "AC_ACNOTYPE" => $AC_ACNOTYPE,
        "AC_ACNOTYPE1" => $AC_ACNOTYPE1,
        "AC_ACNOTYPE2" =>$AC_ACNOTYPE2,
        "AC_ACNOTYPE4" => $AC_ACNOTYPE4,
        // "DESCRIPTION1" => $DESCRIPTION1,
        // "DESCRIPTION2" => $DESCRIPTION2,
        // "DESCRIPTION3" => $DESCRIPTION3,
       // "flag1" => $flag1,
    ];
	
    
    $data[$i]=$tmp;
    $i++;
	
    
}
ob_end_clean();

$config = ['driver'=>'array','data'=>$data];
// print_r($data);
$report = new PHPJasperXML();
$report->load_xml_file($filename)    
     ->setDataSource($config)
     ->export('Pdf');

	 
    
//}   
?>
